@model CarryItemDetailViewModel
@{
    ViewData["Title"] = @Localizer["Detail CarryItem"]; //"휴대물품 상세";
}
<script>
    window.onload = function (){
        PREV_URL = document.getElementById('aList').href + '?culture=@CultureInfo.CurrentCulture';
    }
    // edit - 담당자가 휴대물품신청에 대하여 승인상태 변경 (휴대물품신청 승인/반려 처리)
    function saveEditForm(){
        var myform = document.fmEditCarryItem;
        
        for(var i =0 ;i < myform.length; i++) {
            var el = myform[i];
        }

        var con = confirm('@Localizer["Would you like to save"]');
        if(con){
            myform.CarryItemApplyStatus.disabled = false;
            myform.CarryItemApplyStatus.removeAttribute("disabled");
            myform.CarryItemStatus.disabled = false;
            myform.CarryItemStatus.removeAttribute("disabled");
            myform.submit();
        }
    }
    function goCancel(){
        window.location = PREV_URL;//'/carryItem/list/?culture=@CultureInfo.CurrentCulture'
    }
    function checkImportCnt (obj) {
        var myform = document.fmEditCarryItem;
        var idx = findIndex(myform, "CarryItemInfoID[]", obj);
        // Quantity[] ExportCnt[] ImportCnt[]
        var Quantity = findFormElementByIndex(myform, "CarryItemInfoID[]", "Quantity[]", idx);
        var ExportCnt = findFormElementByIndex(myform, "CarryItemInfoID[]", "ExportCnt[]", idx);
        console.log("[checkImportCnt] idx:"+idx+" / Quantity: "+Quantity.value+" / ExportCnt: "+ ExportCnt.value);
    }
    function checkExportCnt (obj) {
        var myform = document.fmEditCarryItem;
        var idx = findIndex(myform, "CarryItemInfoID[]", obj);
        var Quantity = findFormElementByIndex(myform, "CarryItemInfoID[]", "Quantity[]", idx);
        var RemainCnt = findFormElementByIndex(myform, "CarryItemInfoID[]", "RemainCnt[]", idx);
        if (isNumber(obj.value)){
            var rc = Quantity.value - obj.value;
            console.log("[checkExportCnt] idx:"+idx+" / rc: "+rc);
            if (rc < 0){
                document.getElementById("errormsg").innerHTML = '@Localizer["The quantity taken out cannot exceed the quantity taken in"]';
                obj.value = 0;
                obj.focus();
                return;
            }
            RemainCnt.value = Quantity.value - obj.value;
        }
    }
    /*
    function findIndex(myform, strFirstElementName, obj) {
        var j = -1;
        for(var i =0 ;i<myform.length; i++) {
            var el = myform[i];
            if (el.name == strFirstElementName){
                j++;
            }
            if (el == obj) {
                console.log("[findIndex] idx: "+ j);
                break;
            }
        }
        return j;
    }
    function findFormElementByIndex(myform, strFirstElementName, strFindElementName, idx) {
        var j = -1;
        for(var i =0 ;i<myform.length; i++) {
            var el = myform[i];
            if (el.name == strFirstElementName){
                j++;
            }
            if (j == idx) {
                if (el.name == strFindElementName) {
                    return el;
                }
            } else if(j > idx){
                return null;
            }
        }
        return null;
    }
    */
</script>

<form name="fmEditCarryItem" method="post">
    <input type="hidden" name="mode" value="E" />
    <input type="hidden" name="CarryItemApplyID" value='@Model.CarryItemApply.CarryItemApplyID' />
    
    <div class="tit-header-wrap">
        <div class="rtit">@Localizer["Import Information"]</div>
    </div>

    <div class="reg-form-wrap">
        <ul>
            <li>
                <div class="label s02">@Localizer["Import Date"]</div>
                <div class="form-item-wrap">
                    <input type="text" class="inpdate" placeholder='@Localizer["Import Date"]' name="ImportDate" value='@Model.CarryItemApply.ImportDate' disabled />
                </div>
            </li>
            <li>
                <div class="label s02">@Localizer["Export Date"]</div>
                <div class="form-item-wrap">
                    <input type="text" placeholder='@Localizer["Export Date"]' class="inpdate" name="ExportDate" value='@Model.CarryItemApply.ExportDate' disabled />
                </div>
            </li>
            <li>
                <div class="label s02">@Localizer["Place Of Business"]</div>
                <div class="form-item-wrap">
                    @{
                        if(CultureInfo.CurrentCulture.ToString().Equals("en")){
                            <select class="select" name="Location" asp-items='@(new SelectList(Model.CodeLocation, nameof(CommonCode.SubCodeDesc), nameof(CommonCode.CodeNameEng), Model.CarryItemApply.Location))' disabled></select>
                        }else{
                            <select class="select" name="Location" asp-items='@(new SelectList(Model.CodeLocation, nameof(CommonCode.SubCodeDesc), nameof(CommonCode.CodeNameKor), Model.CarryItemApply.Location))' disabled></select>
                        }
                    }
                </div>
            </li>
            <li>
                <div class="label s02">@Localizer["Import Purpose"]</div>
                <div class="form-item-wrap">
                    @{
                        if(CultureInfo.CurrentCulture.ToString().Equals("en")){
                            <select class="select" name="ImportPurposeCodeID" asp-items='@(new SelectList(Model.CodeImportPurpose, nameof(CommonCode.SubCodeID), nameof(CommonCode.CodeNameEng), Model.CarryItemApply.ImportPurposeCodeID))' disabled></select>
                        }else{
                            <select class="select" name="ImportPurposeCodeID" asp-items='@(new SelectList(Model.CodeImportPurpose, nameof(CommonCode.SubCodeID), nameof(CommonCode.CodeNameKor), Model.CarryItemApply.ImportPurposeCodeID))' disabled></select>
                        }
                    }
                </div>
            </li>
            <li>
                <div class="label s02">@Localizer["Import Place"]</div>
                <div class="form-item-wrap">
                    @{
                        if(CultureInfo.CurrentCulture.ToString().Equals("en")){
                            <select class="select" name="PlaceCodeID" asp-items='@(new SelectList(Model.CodePlace, nameof(CommonCode.SubCodeID), nameof(CommonCode.CodeNameEng), Model.CarryItemApply.PlaceCodeID))' disabled></select>
                        }else{
                            <select class="select" name="PlaceCodeID" asp-items='@(new SelectList(Model.CodePlace, nameof(CommonCode.SubCodeID), nameof(CommonCode.CodeNameKor), Model.CarryItemApply.PlaceCodeID))' disabled></select>
                        }
                    }
                </div>
            </li>
        </ul>
    </div>
            
    <div class="tit-header-wrap">
        <div class="rtit">@Localizer["Contact Information"]</div>
    </div>
    <div class="reg-form-wrap">
        <ul>
            <li>
                <div class="label s02">@Localizer["Contact Name"]</div>
                <div class="form-item-wrap">
                    <input type="text" name="ContactPersonInfo" class="inp" placeholder='@Localizer["Contact Name"]' value="@Model.CarryItemApply.ContactName (@Model.CarryItemApply.ContactOrgNameKor)" readonly />
                    @* <button type="button" class="btn-search" onclick="popSelectPerson();"><img src="/images/ico/ico-search.svg" alt="" /></button> *@
                </div>
            </li>
            <li>
                <div class="label s02">@Localizer["Contact Tel"]</div>
                <div class="form-item-wrap">
                <input type="text" name="ContactMobile" class="inp" placeholder='@Localizer["Contact Tel"]' value="@Model.CarryItemApply.ContactMobile" readonly />
                    @* <button type="button" class="btn-search" onclick="popSelectPerson();"><img src="/images/ico/ico-search.svg" alt="" /></button> *@
                </div>
            </li>
        </ul>
    </div>
    <div class="tit-header-wrap">
        <div class="rtit">@Localizer["Import Person Information"]</div>
    </div>
    <div class="reg-form-wrap">
        <ul>
            <li>
                <div class="label s02">@Localizer["Import Person Name"]</div>
                <div class="form-item-wrap">
                    <input type="text" name="ImportPersonInfo" class="inp" placeholder='@Localizer["Import Person Name"]' value="@Model.CarryItemApply.Name (@Model.CarryItemApply.CompanyName)" readonly />
                    @* <button type="button" class="btn-search" onclick="popSelectPerson();"><img src="/images/ico/ico-search.svg" alt="" /></button> *@
                </div>
            </li>
            <li>
                <div class="label s02">@Localizer["Import Person Tel"]</div>
                <div class="form-item-wrap">
                    <input type="text" name="Mobile" class="inp" placeholder='@Localizer["Import Person Tel"]' value="@Model.CarryItemApply.Mobile" readonly />
                    @* <button type="button" class="btn-search" onclick="popSelectPerson();"><img src="/images/ico/ico-search.svg" alt="" /></button> *@
                    @* <button type="button" onclick="goChangeContactPerson()" class="btn-gray">@Localizer["Modify"]</button> *@
                </div>
            </li>
        </ul>
    </div>
    <div class="tit-header-wrap">
        <div class="rtit">@Localizer["Approval Information"]</div>
    </div>
    <div class="reg-form-wrap">
        <ul>
            <li>
                <div class="label s02">@Localizer["Approval Status"]</div>
                <div class="form-item-wrap">
                    @* @Model.CarryItemApply.ImportPurposeCodeID | @Model.CarryItemApply.CarryItemApplyStatus  *@
                    @{
                        var disabled = "disabled";
                        if (ViewBag.IsModApproval && (Model.CarryItemApply.CarryItemApplyStatus == 0 || (Model.CarryItemApply.ImportPurposeCodeID == 4 && Model.CarryItemApply.CarryItemApplyStatus == 1)))
                        {
                            disabled = "";
                        }
                        <select class="select" name="CarryItemApplyStatus" @disabled>
                            @{
                                var carryItemApplyStatusName = "";
                                foreach(var a in Model.CodeCarryItemApplyStatus) {
                                    carryItemApplyStatusName = "";
                                    //승인상태(CarryItemApplyStatus): 승인대기(0) / 승인완료(1) / 반려(2) / 결재중(3) / 결재완료(4)
                                    if(Model.CarryItemApply.ImportPurposeCodeID == 4 && (Model.CarryItemApply.CarryItemApplyStatus == 1 || Model.CarryItemApply.CarryItemApplyStatus ==  3 || Model.CarryItemApply.CarryItemApplyStatus == 4)){ // 승인완료(승인상태)인 선입고(반입목적) 일때 결재중/결재완료(승인상태) 선택가능
                                        if(a.SubCodeID > 2){ // 결재중(3) / 결재완료(4)
                                            if (CultureInfo.CurrentCulture.ToString().Equals("ko")) {
                                                carryItemApplyStatusName = a.CodeNameKor;
                                            }else{
                                                carryItemApplyStatusName = a.CodeNameEng;
                                            }
                                            if(Model.CarryItemApply.CarryItemApplyStatus == a.SubCodeID){
                                                <option value="@a.SubCodeID" selected>@carryItemApplyStatusName</option>
                                            }else{
                                                <option value="@a.SubCodeID">@carryItemApplyStatusName</option>
                                            }
                                        }
                                    }else{ // 반입목적이 선입고 이외, 승인대기 선입고 일 경우 
                                        if(a.SubCodeID < 3){ // 승인대기(0) / 승인완료(1) / 반려(2)
                                            if (CultureInfo.CurrentCulture.ToString().Equals("ko")) {
                                                carryItemApplyStatusName = a.CodeNameKor;
                                            }else{
                                                carryItemApplyStatusName = a.CodeNameEng;
                                            }
                                            if(Model.CarryItemApply.CarryItemApplyStatus == a.SubCodeID){
                                                <option value="@a.SubCodeID" selected>@carryItemApplyStatusName</option>
                                            }else{
                                                <option value="@a.SubCodeID">@carryItemApplyStatusName</option>
                                            }
                                        } 
                                    }
                                }
                            }
                        </select>
                        @* if(CultureInfo.CurrentCulture.ToString().Equals("en")){
                            <select class="select" name="CarryItemApplyStatus" asp-items='@(new SelectList(Model.CodeCarryItemApplyStatus, nameof(CommonCode.SubCodeID), nameof(CommonCode.CodeNameEng), Model.CarryItemApply.CarryItemApplyStatus))'></select>
                        }else{
                            <select class="select" name="CarryItemApplyStatus" asp-items='@(new SelectList(Model.CodeCarryItemApplyStatus, nameof(CommonCode.SubCodeID), nameof(CommonCode.CodeNameKor), Model.CarryItemApply.CarryItemApplyStatus))'></select>
                        } *@
                    }
                </div>
            </li>

            <li>
                <div class="label s02">@Localizer["Status Classify"]</div>
                <div class="form-item-wrap">
                    @{
                        if (ViewBag.IsModStatus){
                            //승인상태(CarryItemApplyStatus): 승인대기(0) / 승인완료(1) / 반려(2) / 결재중(3) / 결재완료(4)
                            //if(Model.CarryItemApply.ImportPurposeCodeID == 4
                            if(CultureInfo.CurrentCulture.ToString().Equals("en")){
                                // 선입고 일때 결재완료 상태에만 반입가능 
                                if(Model.CarryItemApply.ImportPurposeCodeID == 4){ // 선입고 Model.CarryItemApply.CarryItemApplyStatus == 1 || 
                                    if(Model.CarryItemApply.CarryItemApplyStatus == 4){
                                    @* 
                                    승인>반입 완료(선입고 6): 확인대기(2)/반출요(3)/반출불필요(유상 4)/반출불필요(무상 5)/선입고(6)
                                    승인>확인대기: 
                                    승인>반출요: 반출대기(7)/반출완료(8)
                                    승인>반출불필요(유상 4): 반출불필요(유상 4) -비활성화
                                    승인>반출불필요(무상 5): 반출불필요(무상 5) - 비활성화
                                    승인>선입고: 선입고 비활성화
                                     *@
                                    if(Model.CarryItemApply.CarryItemApplyStatus == 4){ // 결재완료
                                        <select class="select" name="CarryItemStatus">
                                            @foreach(var m2 in Model.CodeCarryItemStatus){
                                                if(m2.SubCodeID != 2){
                                                    if(m2.SubCodeID == Model.CarryItemApply.CarryItemStatus){
                                                        if(Model.CarryItemApply.CarryItemStatus == 1){ // 상태: 반입 완료 (1)
                                                        <option value="@m2.SubCodeID" selected>Waiting for Confirmation</option>
                                                        }else{
                                                        <option value="@m2.SubCodeID" selected>@m2.CodeNameEng</option>
                                                        }
                                                    } else if(ViewBag.IsSecurity ==false){
                                                        if(Model.CarryItemApply.CarryItemStatus == 1){ // 상태: 반입 완료 (1)
                                                            if(m2.SubCodeID == 2 || m2.SubCodeID == 3 || m2.SubCodeID == 4 || m2.SubCodeID == 5 || m2.SubCodeID == 6){
                                                        <option value="@m2.SubCodeID">@m2.CodeNameEng</option>
                                                            }
                                                        }else if(Model.CarryItemApply.CarryItemStatus == 0){ // 상태: 반입 대기
                                                            if(m2.SubCodeID == 1){ // 반입 완료
                                                        <option value="@m2.SubCodeID">@m2.CodeNameEng</option>
                                                            }
                                                        }else if(Model.CarryItemApply.CarryItemStatus == 3){ // 상태: 반출요
                                                            if(ViewBag.IsMaster){
                                                                if(m2.SubCodeID == 7 || m2.SubCodeID == 8){ // 반입 대기 | 반입 완료
                                                            <option value="@m2.SubCodeID">@m2.CodeNameKor</option>
                                                                }
                                                            } else {
                                                                if(m2.SubCodeID == 7){ // 반입 대기
                                                            <option value="@m2.SubCodeID" selected>@m2.CodeNameKor</option>
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        </select>
                                        @* <select class="select" name="CarryItemStatus" asp-items='@(new SelectList(Model.CodeCarryItemStatus, nameof(CommonCode.SubCodeID), nameof(CommonCode.CodeNameEng), @Model.CarryItemApply.CarryItemStatus))'></select> *@
                                    }else{
                                        <select class="select" name="CarryItemStatus" asp-items='@(new SelectList(Model.CodeCarryItemStatus, nameof(CommonCode.SubCodeID), nameof(CommonCode.CodeNameEng), @Model.CarryItemApply.CarryItemStatus))' disabled></select>
                                    }
                                    }else{
                                        <select class="select" name="CarryItemStatus" asp-items='@(new SelectList(Model.CodeCarryItemStatus, nameof(CommonCode.SubCodeID), nameof(CommonCode.CodeNameEng), @Model.CarryItemApply.CarryItemStatus))' disabled></select>
                                    }
                                }else{
                                    //선입고 외일때 승인완료일때 반입가능 
                                    if(Model.CarryItemApply.CarryItemApplyStatus == 1){
                                        @* 
                                        승인>반입대기(0) : 반입대기(0)/반입완료(1)
                                        승인>반입완료(1) : 확인대기(2)/반출요(3)/반출불필요(유상 4)/반출불필요(무상 5)
                                        승인>반출요(3) : 반출대기(7)/반출완료(8)
                                        승인>반출불필요(유상 4) : 반출불필요(유상 4) -비활성화
                                        승인>반출불필요(무상 5) : 반출불필요(무상 5) - 비활성화
                                        승인>반출완료(8) : 반출완료 - 비활성화                                        
                                         *@
                                        <select class="select" name="CarryItemStatus">
                                            @foreach(var m2 in Model.CodeCarryItemStatus){
                                                if(m2.SubCodeID != 2){
                                                    if(m2.SubCodeID == Model.CarryItemApply.CarryItemStatus){
                                                        if(Model.CarryItemApply.CarryItemStatus == 1){ // 상태: 반입 완료 (1)
                                                        <option value="@m2.SubCodeID" selected>Waiting for Confirmation</option>
                                                        }else{
                                                        <option value="@m2.SubCodeID" selected>@m2.CodeNameEng</option>
                                                        }
                                                    } else{
                                                        if(ViewBag.IsSecurity){
                                                            if(Model.CarryItemApply.CarryItemApplyStatus == 1){ // 승인구분: 승인
                                                                if(Model.CarryItemApply.CarryItemStatus == 0){ // 상태: 반입 대기
                                                                    if(m2.SubCodeID == 1){ // 반입 완료
                                                                <option value="@m2.SubCodeID">@m2.CodeNameEng</option>
                                                                    }
                                                                }else if(Model.CarryItemApply.CarryItemStatus == 3){ // 상태: 반출요
                                                                    if(m2.SubCodeID == 7 || m2.SubCodeID == 8){ // 반입 완료
                                                                <option value="@m2.SubCodeID">@m2.CodeNameEng</option>
                                                                    }
                                                                }
                                                            }
                                                        }else if(ViewBag.IsMaster || (Model.CarryItemApply.ContactSabun != null && Model.CarryItemApply.ContactSabun.Equals(ViewBag.my.Sabun)&& Model.CarryItemApply.CarryItemStatus != 0)){
                                                            if(Model.CarryItemApply.CarryItemApplyStatus == 1){ // 승인구분: 승인
                                                                if(Model.CarryItemApply.CarryItemStatus == 1){ // 상태: 반입 완료 (1)
                                                                    if(m2.SubCodeID == 2 || m2.SubCodeID == 3 || m2.SubCodeID == 4 || m2.SubCodeID == 5){
                                                                <option value="@m2.SubCodeID">@m2.CodeNameEng</option>
                                                                    }
                                                                }else if(Model.CarryItemApply.CarryItemStatus == 0){ // 상태: 반입 대기
                                                                    if(m2.SubCodeID == 1){ // 반입 완료
                                                                <option value="@m2.SubCodeID">@m2.CodeNameEng</option>
                                                                    }
                                                                }else if(Model.CarryItemApply.CarryItemStatus == 3){ // 상태: 반출요
                                                                    if(m2.SubCodeID == 7 || m2.SubCodeID == 8){ // 반입 완료
                                                                <option value="@m2.SubCodeID">@m2.CodeNameEng</option>
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        </select>
                                        @* <select class="select" name="CarryItemStatus" asp-items='@(new SelectList(Model.CodeCarryItemStatus, nameof(CommonCode.SubCodeID), nameof(CommonCode.CodeNameEng), @Model.CarryItemApply.CarryItemStatus))'></select> *@
                                    }else{
                                        <select class="select" name="CarryItemStatus" asp-items='@(new SelectList(Model.CodeCarryItemStatus, nameof(CommonCode.SubCodeID), nameof(CommonCode.CodeNameEng), @Model.CarryItemApply.CarryItemStatus))' disabled></select>
                                    }
                                }
                            }else{
                                if(Model.CarryItemApply.ImportPurposeCodeID == 4){  // 선입고
                                    @* 
                                    승인>반입 완료(선입고 6): 확인대기(2)/반출요(3)/반출불필요(유상 4)/반출불필요(무상 5)/선입고(6)
                                    승인>확인대기: 
                                    승인>반출요: 반출대기(7)/반출완료(8)
                                    승인>반출불필요(유상 4): 반출불필요(유상 4) -비활성화
                                    승인>반출불필요(무상 5): 반출불필요(무상 5) - 비활성화
                                    승인>선입고: 선입고 비활성화
                                    보안실: 반입대기(0) / 반출 요(3) 에서만 수정 가능.
                                     *@
                                    if(Model.CarryItemApply.CarryItemApplyStatus == 4){ // 결재완료
                                        <select class="select" name="CarryItemStatus">
                                            @foreach(var m2 in Model.CodeCarryItemStatus){
                                                if(m2.SubCodeID != 2){
                                                    if(m2.SubCodeID == Model.CarryItemApply.CarryItemStatus){
                                                        if(Model.CarryItemApply.CarryItemStatus == 1){ // 상태: 반입 완료 (1)
                                                        <option value="@m2.SubCodeID" selected>확인대기</option>
                                                        }else{
                                                        <option value="@m2.SubCodeID" selected>@m2.CodeNameKor</option>
                                                        }
                                                    } else if(ViewBag.IsSecurity ==false){
                                                        if(Model.CarryItemApply.CarryItemStatus == 1){ // 상태: 반입 완료 (1)
                                                            if(m2.SubCodeID == 2 || m2.SubCodeID == 3 || m2.SubCodeID == 4 || m2.SubCodeID == 5 || m2.SubCodeID == 6){
                                                        <option value="@m2.SubCodeID" >@m2.CodeNameKor</option>
                                                            }
                                                        }else if(Model.CarryItemApply.CarryItemStatus == 0){ // 상태: 반입 대기
                                                            if(m2.SubCodeID == 1){ // 반입 완료
                                                        <option value="@m2.SubCodeID">@m2.CodeNameKor</option>
                                                            }
                                                        }else if(Model.CarryItemApply.CarryItemStatus == 3){ // 상태: 반출요
                                                            if(m2.SubCodeID == 7 || m2.SubCodeID == 8){ // 반입 완료
                                                        <option value="@m2.SubCodeID">@m2.CodeNameKor</option>
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        </select>
                                        @* <select class="select" name="CarryItemStatus" asp-items='@(new SelectList(Model.CodeCarryItemStatus, nameof(CommonCode.SubCodeID), nameof(CommonCode.CodeNameKor), @Model.CarryItemApply.CarryItemStatus))'></select> *@
                                    }else{
                                        <select class="select" name="CarryItemStatus" asp-items='@(new SelectList(Model.CodeCarryItemStatus, nameof(CommonCode.SubCodeID), nameof(CommonCode.CodeNameKor), @Model.CarryItemApply.CarryItemStatus))' disabled></select>
                                    }
                                }else{ //선입고 외
                                    if(Model.CarryItemApply.CarryItemApplyStatus == 1){ // 승인
                                        @* 
                                        승인>반입대기(0) : 반입대기(0)/반입완료(1)
                                        승인>반입완료(1) : 확인대기(2)/반출요(3)/반출불필요(유상 4)/반출불필요(무상 5)
                                        승인>반출요(3) : 반출대기(7)/반출완료(8)
                                        승인>반출불필요(유상 4) : 반출불필요(유상 4) -비활성화
                                        승인>반출불필요(무상 5) : 반출불필요(무상 5) - 비활성화
                                        승인>반출완료(8) : 반출완료 - 비활성화                                        
                                         *@
                                        <select class="select" name="CarryItemStatus">
                                            @foreach(var m2 in Model.CodeCarryItemStatus){
                                                if(m2.SubCodeID != 2){
                                                    if(m2.SubCodeID == Model.CarryItemApply.CarryItemStatus){
                                                        if(Model.CarryItemApply.CarryItemStatus == 1){ // 상태: 반입 완료 (1)
                                                        <option value="@m2.SubCodeID" selected>확인대기</option>
                                                        }else{
                                                        <option value="@m2.SubCodeID" selected>@m2.CodeNameKor</option>
                                                        }
                                                    } else{
                                                        if(ViewBag.IsSecurity){
                                                            if(Model.CarryItemApply.CarryItemApplyStatus == 1){ // 승인구분: 승인
                                                                if(Model.CarryItemApply.CarryItemStatus == 0){ // 상태: 반입 대기
                                                                    if(m2.SubCodeID == 1){ // 반입 완료
                                                                <option value="@m2.SubCodeID">@m2.CodeNameKor</option>
                                                                    }
                                                                }else if(Model.CarryItemApply.CarryItemStatus == 3){ // 상태: 반출요
                                                                    if(m2.SubCodeID == 7 || m2.SubCodeID == 8){ // 반입 완료
                                                                <option value="@m2.SubCodeID">@m2.CodeNameKor</option>
                                                                    }
                                                                }
                                                            }
                                                        }else if(ViewBag.IsMaster || (Model.CarryItemApply.ContactSabun != null && Model.CarryItemApply.ContactSabun.Equals(ViewBag.my.Sabun)&& Model.CarryItemApply.CarryItemStatus != 0)){
                                                            if(Model.CarryItemApply.CarryItemApplyStatus == 1){ // 승인구분: 승인
                                                                if(Model.CarryItemApply.CarryItemStatus == 1){ // 상태: 반입 완료 (1)
                                                                    if(m2.SubCodeID == 2 || m2.SubCodeID == 3 || m2.SubCodeID == 4 || m2.SubCodeID == 5){
                                                                <option value="@m2.SubCodeID">@m2.CodeNameKor</option>
                                                                    }
                                                                }else if(Model.CarryItemApply.CarryItemStatus == 0){ // 상태: 반입 대기
                                                                    if(m2.SubCodeID == 1){ // 반입 완료
                                                                <option value="@m2.SubCodeID">@m2.CodeNameKor</option>
                                                                    }
                                                                }else if(Model.CarryItemApply.CarryItemStatus == 3){ // 상태: 반출요
                                                                    if(ViewBag.IsMaster){
                                                                        if(m2.SubCodeID == 7 || m2.SubCodeID == 8){ // 반입 대기 | 반입 완료
                                                                    <option value="@m2.SubCodeID">@m2.CodeNameKor</option>
                                                                        }
                                                                    } else {
                                                                        if(m2.SubCodeID == 7){ // 반입 대기
                                                                    <option value="@m2.SubCodeID" selected>@m2.CodeNameKor</option>
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        </select>
                                        @* <select class="select" name="CarryItemStatus" asp-items='@(new SelectList(Model.CodeCarryItemStatus, nameof(CommonCode.SubCodeID), nameof(CommonCode.CodeNameKor), @Model.CarryItemApply.CarryItemStatus))'></select> *@
                                    }else{
                                        <select class="select" name="CarryItemStatus" asp-items='@(new SelectList(Model.CodeCarryItemStatus, nameof(CommonCode.SubCodeID), nameof(CommonCode.CodeNameKor), @Model.CarryItemApply.CarryItemStatus))' disabled></select>
                                    }

                                }
                            }
                        }else{
                            if(CultureInfo.CurrentCulture.ToString().Equals("en")){
                                        <select class="select" name="CarryItemStatus" asp-items='@(new SelectList(Model.CodeCarryItemStatus, nameof(CommonCode.SubCodeID), nameof(CommonCode.CodeNameEng), @Model.CarryItemApply.CarryItemStatus))' disabled></select>
                            }else{
                                        <select class="select" name="CarryItemStatus" asp-items='@(new SelectList(Model.CodeCarryItemStatus, nameof(CommonCode.SubCodeID), nameof(CommonCode.CodeNameKor), @Model.CarryItemApply.CarryItemStatus))' disabled></select>
                            }
                        }

                    }                    
                </div>
            </li>
@*             
            <li>
                <div class="label s02">@Localizer["Import Classify"]</div>
                <div class="form-item-wrap">
                    @{
                        disabled = "disabled";
                        if(ViewBag.IsModStatus){
                            if(Model.CarryItemApply.ImportPurposeCodeID == 4 && Model.CarryItemApply.CarryItemApplyStatus == 4){ // 선입고일때: 결제 완료 상태일때만 반입구분 선택 가능 하도록 
                                disabled = "";
                            }else if(Model.CarryItemApply.ImportPurposeCodeID != 4 && Model.CarryItemApply.CarryItemApplyStatus == 1){ // 선입고외 항목: 승인완료일때 반입구분 선택 가능하도록
                                disabled = "";
                            }
                        }
                        <select class="select" name="CarryItemImportType" @disabled>
                            @{
                                var carryItemImportTypeName = "";
                                foreach(var a in Model.CodeCarryItemImportType) {
                                    carryItemImportTypeName = "";
                                    if(Model.CarryItemApply.ImportPurposeCodeID == 4){ // 선입고 
                                        if (CultureInfo.CurrentCulture.ToString().Equals("ko")) {
                                            carryItemImportTypeName = a.CodeNameKor;
                                        }else{
                                            carryItemImportTypeName = a.CodeNameEng;
                                        }
                                        if(Model.CarryItemApply.CarryItemImportType == a.SubCodeID){
                                            <option value="@a.SubCodeID" selected>@carryItemImportTypeName</option>
                                        }else{
                                            <option value="@a.SubCodeID">@carryItemImportTypeName</option>
                                        }
                                    }else{ // 선입고 이외 
                                        if(a.SubCodeID < 6){
                                            if (CultureInfo.CurrentCulture.ToString().Equals("ko")) {
                                                carryItemImportTypeName = a.CodeNameKor;
                                            }else{
                                                carryItemImportTypeName = a.CodeNameEng;
                                            }
                                            if(Model.CarryItemApply.CarryItemImportType == a.SubCodeID){
                                                <option value="@a.SubCodeID" selected>@carryItemImportTypeName</option>
                                            }else{
                                                <option value="@a.SubCodeID">@carryItemImportTypeName</option>
                                            }
                                        } 
                                    }
                                }
                            }
                        </select>
                    }
                </div>
            </li> *@

            <li class="full">
                <div class="label s02">@Localizer["Description"]</div>
                <div class="form-item-wrap">
                    <input type="text" name="Memo" class="inp" placeholder='@Localizer["Description"]' maxlength="100" />
                </div>
            </li>
        </ul>
    </div>

    <div class="tit-header-wrap">
        <div class="rtit">@Localizer["Progress Information"]</div>
    </div>
    <div class="reg-form-wrap">
        <ul>
            <li class="full">
                <div class="form-item-wrap" style="flex-direction: column;">
                    <table aria-label="비고 진행현황">
                        <tr>
                            <th>@Localizer["DateTime"]</th>
                            <th>@Localizer["Status"]</th>
                            <th>@Localizer["Description"]</th>
                            <th>@Localizer["Worker"]</th>
                        </tr>
                    </table>
                    <table aria-label="비고 진행현황">

    @{
        var updater = "";
        var carryItemStatusName = "";
        foreach(CarryItemApplyHistory m in Model.CarryItemApplyHistoryList){
            if(string.IsNullOrEmpty(m.UpdateName)){
                updater = "";
            }else{
                if(string.IsNullOrEmpty(m.UpdateOrgNameKor)){
                    updater=m.UpdateName ;
                }else{
                    updater=m.UpdateName + "(" + m.UpdateOrgNameKor + ")";
                }
            }
            carryItemStatusName = "";
            if (m.CarryItemStatus > -1 && Model.CodeCarryItemStatus != null) {
                foreach(var a in Model.CodeCarryItemStatus) {
                    if (a.SubCodeID == m.CarryItemStatus) {
                        if (CultureInfo.CurrentCulture.ToString().Equals("ko")) {
                            carryItemStatusName = a.CodeNameKor;
                        }else {
                            carryItemStatusName = a.CodeNameEng;
                        }
                    }
                }
            }  
                        <tr>
                            <td>@m.InsertUpdateDate</td>
                            <td>@carryItemStatusName</td>
                            <td>@m.Memo</td>
                            <td>@updater</td>
                        </tr>
        }
    }
                    </table>
                </div>
            </li>
        </ul>
    </div>    
    <div class="tit-header-wrap">
        <div class="rtit">@Localizer["CarryItem Information"]</div>
    </div>

@{
    var num=0;
    foreach(CarryItemInfo m in Model.CarryItemInfos){  
        num++;
        <div id="add-form-wrap">
            <input type="hidden" name="CarryItemInfoID[]" value="@m.CarryItemInfoID" />
            <div class="reg-form-wrap">
                <div class="reg-header-wrap">
                    <div class="num">@num</div>
                </div>
                <ul>
                    <li>
                        <div class="label s03">@Localizer["Classify"]</div>
                        <div class="form-item-wrap">
                            @{
                                if(CultureInfo.CurrentCulture.ToString().Equals("en")){
                                    <select class="select" name="CarryItemCodeID[]" asp-items='@(new SelectList(Model.CodeCarryItem, nameof(CommonCode.SubCodeID), nameof(CommonCode.CodeNameEng), m.CarryItemCodeID))' disabled></select>
                                }else{
                                    <select class="select" name="CarryItemCodeID[]" asp-items='@(new SelectList(Model.CodeCarryItem, nameof(CommonCode.SubCodeID), nameof(CommonCode.CodeNameKor), m.CarryItemCodeID))' disabled></select>                        
                                }
                            }
                        </div>
                    </li>
                    <li>
                        <div class="label s03">@Localizer["Product Name"]</div>
                        <div class="form-item-wrap">
                            <input type="text" name="ItemName[]" class="inp" placeholder='@Localizer["Product Name"]' value='@m.ItemName' disabled />
                        </div>
                    </li>
                    <li>
                        <div class="label s03">@Localizer["Serial Number"]</div>
                        <div class="form-item-wrap">
                            <input type="text" name="ItemSN[]" class="inp" placeholder='@Localizer["Serial Number"]' value='@m.ItemSN' disabled />
                        </div>
                    </li>
                    <li class="empty">&nbsp;</li>
                    <li>
                        <div class="label s03">@Localizer["Import Quantity"]</div>
                        @* @Localizer["Quantity"] *@
                        <div class="form-item-wrap">
                            <input type="number" name="Quantity[]" class="inp" placeholder='@Localizer["Quantity"]' value='@m.Quantity' disabled />
                        </div>
                    </li>
                    <li>
                        <div class="label s03">@Localizer["Unit"]</div>
                        <div class="form-item-wrap">
                            <input type="text" name="Unit[]" class="inp" placeholder='@Localizer["Unit"]' value='@m.Unit' disabled />
                        </div>
                    </li>
                    <li>
                        <div class="label s03">@Localizer["Export Quantity"]</div>
                        <div class="form-item-wrap">                            
                            <input type="number" name="ExportCnt[]" class="inp" placeholder='@Localizer["Export Quantity"]' min="1" max="100000" value='@m.ExportCnt' onkeyup="checkExportCnt(this)" />
                        </div>
                    </li>
                    <li>
                        <div class="label s03">@Localizer["Remain Quantity"]</div>
                        <div class="form-item-wrap">
                            <input type="number" name="RemainCnt[]" class="inp" placeholder='@Localizer["Remain Quantity"]' min="1" max="100000" value='@m.RemainCnt' readonly />
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    }
}
</form>
<div id="add-form-wrap" style="display:none;">
    <div class="reg-form-wrap">
        <div class="reg-header-wrap">
            <div class="num">02</div>
        </div>
        <ul>
            <li>
                <div class="label s03">@Localizer["Classify"]</div>
                <div class="form-item-wrap">
                    <select name="CarryItemCodeID" class="select">
                        <option value="0">노트북</option>
                        <option value="1">기타</option>
                    </select>
                </div>
            </li>
            <li>
                <div class="label s03">@Localizer["Product Name"]</div>
                <div class="form-item-wrap">
                    <input type="text" name="ItemName" class="inp" placeholder='@Localizer["Product Name"]' />
                </div>
            </li>
            <li>
                <div class="label s03">@Localizer["Serial Number"]</div>
                <div class="form-item-wrap">
                    <input type="text" name="ItemSN" class="inp" placeholder='@Localizer["Serial Number"]' />
                </div>
            </li>
            <li class="empty">&nbsp;</li>
            <li>
                <div class="label s03">@Localizer["Quantity"]</div>
                <div class="form-item-wrap">
                    <input type="number" name="Quantity" class="inp" placeholder='@Localizer["Quantity"]' />
                </div>
            </li>
            <li>
                <div class="label s03">@Localizer["Unit"]</div>
                <div class="form-item-wrap">
                    <input type="text" name="Unit" class="inp" placeholder='@Localizer["Unit"]' />
                </div>
            </li>
            <li>
                <div class="label s03">@Localizer["Export Quantity"]</div>
                <div class="form-item-wrap">
                    <input type="number" name="ExportCnt" class="inp" placeholder='@Localizer["Export Quantity"]' />
                </div>
            </li>
            <li>
                <div class="label s03">@Localizer["Import Quantity"]</div>
                <div class="form-item-wrap">
                    <input type="number" name="ImportCnt" class="inp" placeholder='@Localizer["Import Quantity"]' />
                </div>
            </li>
        </ul>
    </div>
</div>
<div class="msg-wrap">
    <div class="label org">
        @* @Localizer["This is a required field"] &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *@
        <span id="errormsg" style="font-size:15px;color:#636D85;">@ViewBag.ErrorMsg</span>
    </div>
</div>
<div class="req-btn-wrap">
    <div class="lt-item">
    </div>
    <div class="lt-item">
        <button type="button" class="btn-gray" onClick="goCancel();">@Localizer["Cancel"]</button>
@{
    @* ImportPurposeCodeID: 4 선입고
    CarryItemApplyStatus 0: 신청, 1: 승인, 2: 반려
    CarryItemStatus 0: 반입대기, 1: 반입완료, 2: 확인대기, 3: 반출요, 4: 반출불필요(유상), 5: 반출불필요(무상), 6: 선입고, 7:반출대기, 8: 반출완료  *@
    if(ViewBag.IsModStatus){
                        if(ViewBag.IsMaster 
                            || (ViewBag.IsGeneralManager && Model.CarryItemApply.CarryItemApplyStatus == 0 || (Model.CarryItemApply.ImportPurposeCodeID == 4 && Model.CarryItemApply.CarryItemApplyStatus == 1))
                            || (ViewBag.IsSecurity && (Model.CarryItemApply.CarryItemStatus == 0 || Model.CarryItemApply.CarryItemStatus == 7))){
        <button type="button" class="btn-green" onclick="saveEditForm();">@Localizer["Save"]</button>
                        } else{
                            if(Model.CarryItemApply.ContactSabun != null && Model.CarryItemApply.ContactSabun.Equals(ViewBag.my.Sabun) && 
                                (Model.CarryItemApply.CarryItemStatus == 1 || Model.CarryItemApply.CarryItemStatus == 2 || Model.CarryItemApply.CarryItemApplyStatus == 0 || (Model.CarryItemApply.ImportPurposeCodeID == 4 && Model.CarryItemApply.CarryItemApplyStatus == 1))){
        <button type="button" class="btn-green" onclick="saveEditForm();">@Localizer["Save"]</button>
                            } else{
        @* <button type="button" class="btn-green" disabled>@Localizer["Save"]</button> *@
                            }
                        }
    }
}        
    </div>
</div>
<partial name="~/Views/_Popup/PopSelectPerson.cshtml" />
@* for Prev Link *@
<a asp-action="List" asp-all-route-data="@ViewBag.prevDic" id="aList" style="visibility:invisible;"></a>

<iframe name="ifTemp" title="temp" border="0" style="display:none;"></iframe>