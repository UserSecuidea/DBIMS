// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebVisit.Models;

#nullable disable

namespace WebVisit.Migrations.DBSVISITDev
{
    [DbContext(typeof(DBSVISITDevContext))]
    [Migration("20231006010227_carryiteminfo")]
    partial class carryiteminfo
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Korean_Wansung_CI_AS")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebVisit.Models.Approval", b =>
                {
                    b.Property<int>("ApprovalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApprovalID"));

                    b.Property<int>("ApprovalType")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ApprovalID");

                    b.ToTable("Approval");
                });

            modelBuilder.Entity("WebVisit.Models.ApprovalHistory", b =>
                {
                    b.Property<int>("ApprovalHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApprovalHistoryID"));

                    b.Property<int>("ApprovalID")
                        .HasColumnType("int");

                    b.Property<int>("ApprovalType")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ApprovalHistoryID");

                    b.ToTable("ApprovalHistory");
                });

            modelBuilder.Entity("WebVisit.Models.ApprovalLine", b =>
                {
                    b.Property<int>("ApprovalLineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApprovalLineID"));

                    b.Property<int>("ApprovalID")
                        .HasColumnType("int");

                    b.Property<string>("ApprovalName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovalOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovalSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ApprovalSysType")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ApprovalLineID");

                    b.ToTable("ApprovalLine");
                });

            modelBuilder.Entity("WebVisit.Models.ApprovalLineHistory", b =>
                {
                    b.Property<int>("ApprovalLineHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApprovalLineHistoryID"));

                    b.Property<int>("ApprovalID")
                        .HasColumnType("int");

                    b.Property<int>("ApprovalLineID")
                        .HasColumnType("int");

                    b.Property<string>("ApprovalName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovalOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovalSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ApprovalSysType")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ApprovalLineHistoryID");

                    b.ToTable("ApprovalLineHistory");
                });

            modelBuilder.Entity("WebVisit.Models.BlackList", b =>
                {
                    b.Property<int>("BlackListID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlackListID"));

                    b.Property<string>("BirthDate")
                        .HasColumnType("char(10)");

                    b.Property<int>("BlackListStatus")
                        .HasColumnType("int");

                    b.Property<int>("BlackListType")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Reason")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Sabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatementFileData")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("StatementFileDataHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VisitPersonID")
                        .HasColumnType("int");

                    b.Property<int>("VisitorType")
                        .HasColumnType("int");

                    b.HasKey("BlackListID");

                    b.ToTable("BlackList");
                });

            modelBuilder.Entity("WebVisit.Models.BlackListHistory", b =>
                {
                    b.Property<int>("BlackListHIstoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlackListHIstoryID"));

                    b.Property<string>("BirthDate")
                        .HasColumnType("char(10)");

                    b.Property<int>("BlackListID")
                        .HasColumnType("int");

                    b.Property<int>("BlackListStatus")
                        .HasColumnType("int");

                    b.Property<int>("BlackListType")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Memo")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Reason")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Sabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatementFileData")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("StatementFileDataHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("VisitPersonID")
                        .HasColumnType("int");

                    b.Property<int>("VisitorType")
                        .HasColumnType("int");

                    b.HasKey("BlackListHIstoryID");

                    b.ToTable("BlackListHistory");
                });

            modelBuilder.Entity("WebVisit.Models.CarCardIssueApply", b =>
                {
                    b.Property<int>("CarCardIssueApplyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarCardIssueApplyID"));

                    b.Property<string>("ApplyReason")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("CarLIcenseFileData")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("CarLIcenseFileDataHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CarModel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CarNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CarTypeCodeID")
                        .HasColumnType("int");

                    b.Property<int>("CardApplyStatus")
                        .HasColumnType("int");

                    b.Property<int?>("CardID")
                        .HasColumnType("int");

                    b.Property<int?>("CardIssueStatus")
                        .HasColumnType("int");

                    b.Property<int>("CardIssueType")
                        .HasColumnType("int");

                    b.Property<string>("CardName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CardNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CardTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CardValidDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("GradeID")
                        .HasColumnType("int");

                    b.Property<string>("GradeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("LPRResult")
                        .HasColumnType("char(1)");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PersonTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("ReissueNo")
                        .HasColumnType("int");

                    b.Property<string>("Sabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TermsPrivarcyFileData")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("TermsPrivarcyFileDataHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CarCardIssueApplyID");

                    b.ToTable("CarCardIssueApply");
                });

            modelBuilder.Entity("WebVisit.Models.CarCardIssueApplyHistory", b =>
                {
                    b.Property<int>("CarCardIssueApplyHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarCardIssueApplyHistoryID"));

                    b.Property<string>("ApplyReason")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("CarCardIssueApplyID")
                        .HasColumnType("int");

                    b.Property<string>("CarLIcenseFileData")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("CarLIcenseFileDataHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CarModel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CarNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CarTypeCodeID")
                        .HasColumnType("int");

                    b.Property<int>("CardApplyStatus")
                        .HasColumnType("int");

                    b.Property<int?>("CardID")
                        .HasColumnType("int");

                    b.Property<int?>("CardIssueStatus")
                        .HasColumnType("int");

                    b.Property<int>("CardIssueType")
                        .HasColumnType("int");

                    b.Property<string>("CardName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CardNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CardTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CardValidDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("GradeID")
                        .HasColumnType("int");

                    b.Property<string>("GradeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Memo")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PersonTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("ReissueNo")
                        .HasColumnType("int");

                    b.Property<string>("Sabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TermsPrivarcyFileData")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("TermsPrivarcyFileDataHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CarCardIssueApplyHistoryID");

                    b.ToTable("CarCardIssueApplyHistory");
                });

            modelBuilder.Entity("WebVisit.Models.CardIssueApply", b =>
                {
                    b.Property<int>("CardIssueApplyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardIssueApplyID"));

                    b.Property<string>("ApplyReason")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("CardApplyStatus")
                        .HasColumnType("int");

                    b.Property<int?>("CardID")
                        .HasColumnType("int");

                    b.Property<int?>("CardIssueStatus")
                        .HasColumnType("int");

                    b.Property<int>("CardIssueType")
                        .HasColumnType("int");

                    b.Property<string>("CardName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CardNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CardTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CardValidDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("GradeID")
                        .HasColumnType("int");

                    b.Property<string>("GradeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PersonTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("ReissueNo")
                        .HasColumnType("int");

                    b.Property<string>("Sabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TermsPrivarcyFileData")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("TermsPrivarcyFileDataHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CardIssueApplyID");

                    b.ToTable("CardIssueApply");
                });

            modelBuilder.Entity("WebVisit.Models.CardIssueApplyHistory", b =>
                {
                    b.Property<int>("CardIssueApplyHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardIssueApplyHistoryID"));

                    b.Property<string>("ApplyReason")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("CardApplyStatus")
                        .HasColumnType("int");

                    b.Property<int?>("CardID")
                        .HasColumnType("int");

                    b.Property<int>("CardIssueApplyID")
                        .HasColumnType("int");

                    b.Property<int?>("CardIssueStatus")
                        .HasColumnType("int");

                    b.Property<int>("CardIssueType")
                        .HasColumnType("int");

                    b.Property<string>("CardName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CardNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CardTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CardValidDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("GradeID")
                        .HasColumnType("int");

                    b.Property<string>("GradeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Memo")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PersonTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("ReissueNo")
                        .HasColumnType("int");

                    b.Property<string>("Sabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TermsPrivarcyFileData")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("TermsPrivarcyFileDataHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CardIssueApplyHistoryID");

                    b.ToTable("CardIssueApplyHistory");
                });

            modelBuilder.Entity("WebVisit.Models.CarryItemApply", b =>
                {
                    b.Property<int>("CarryItemApplyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarryItemApplyID"));

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovalName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalOpinion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ApprovalOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovalOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovalSabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalTel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CarryItemApplyStatus")
                        .HasColumnType("int");

                    b.Property<int?>("CarryItemImportType")
                        .HasColumnType("int");

                    b.Property<int>("CarryItemStatus")
                        .HasColumnType("int");

                    b.Property<int>("CarryVisitorType")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactMobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactSabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExportDate")
                        .HasColumnType("char(10)");

                    b.Property<string>("ExportTime")
                        .HasColumnType("char(5)");

                    b.Property<string>("ImportDate")
                        .HasColumnType("char(10)");

                    b.Property<int>("ImportPurposeCodeID")
                        .HasColumnType("int");

                    b.Property<string>("ImportReason")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ImportTime")
                        .HasColumnType("char(5)");

                    b.Property<int>("ImportWayType")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("InsertVisitPersonID")
                        .HasColumnType("int");

                    b.Property<int>("InsertVisitorType")
                        .HasColumnType("int");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PlaceCodeID")
                        .HasColumnType("int");

                    b.Property<string>("Sabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VisitPersonID")
                        .HasColumnType("int");

                    b.HasKey("CarryItemApplyID");

                    b.ToTable("CarryItemApply");
                });

            modelBuilder.Entity("WebVisit.Models.CarryItemApplyHistory", b =>
                {
                    b.Property<int>("CarryItemApplyHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarryItemApplyHistoryID"));

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovalName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalOpinion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ApprovalOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovalOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovalSabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalTel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CarryItemApplyID")
                        .HasColumnType("int");

                    b.Property<int>("CarryItemApplyStatus")
                        .HasColumnType("int");

                    b.Property<int?>("CarryItemImportType")
                        .HasColumnType("int");

                    b.Property<int>("CarryItemStatus")
                        .HasColumnType("int");

                    b.Property<int>("CarryVisitorType")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactMobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactSabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExportDate")
                        .HasColumnType("char(10)");

                    b.Property<string>("ExportTime")
                        .HasColumnType("char(5)");

                    b.Property<string>("ImportDate")
                        .HasColumnType("char(10)");

                    b.Property<int>("ImportPurposeCodeID")
                        .HasColumnType("int");

                    b.Property<string>("ImportReason")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ImportTime")
                        .HasColumnType("char(5)");

                    b.Property<int>("ImportWayType")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Memo")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PlaceCodeID")
                        .HasColumnType("int");

                    b.Property<string>("Sabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdateVisitPersonID")
                        .HasColumnType("int");

                    b.Property<int>("UpdateVisitorType")
                        .HasColumnType("int");

                    b.Property<int?>("VisitPersonID")
                        .HasColumnType("int");

                    b.HasKey("CarryItemApplyHistoryID");

                    b.ToTable("CarryItemApplyHistory");
                });

            modelBuilder.Entity("WebVisit.Models.CarryItemInfo", b =>
                {
                    b.Property<int>("CarryItemInfoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarryItemInfoID"));

                    b.Property<int>("CarryItemApplyID")
                        .HasColumnType("int");

                    b.Property<int>("CarryItemCodeID")
                        .HasColumnType("int");

                    b.Property<int?>("ExportCnt")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("IsVaccineUpdated")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("IsVirusScanned")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemSN")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("QuarantineConfirmationContact")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("QuarantineConfirmationGate")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<int?>("RemainCnt")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CarryItemInfoID");

                    b.ToTable("CarryItemInfo");
                });

            modelBuilder.Entity("WebVisit.Models.CarryItemInfoHistory", b =>
                {
                    b.Property<int>("CarryItemInfoHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarryItemInfoHistoryID"));

                    b.Property<int>("CarryItemApplyID")
                        .HasColumnType("int");

                    b.Property<int>("CarryItemCodeID")
                        .HasColumnType("int");

                    b.Property<int>("CarryItemInfoID")
                        .HasColumnType("int");

                    b.Property<int?>("ExportCnt")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ItemSN")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Memo")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("RemainCnt")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CarryItemInfoHistoryID");

                    b.ToTable("CarryItemInfoHistory");
                });

            modelBuilder.Entity("WebVisit.Models.CommonCode", b =>
                {
                    b.Property<int>("CommonCodeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommonCodeID"));

                    b.Property<string>("CodeNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CodeNameKor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GroupNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValue("Y");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValue("N");

                    b.Property<string>("IsSys")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValue("N");

                    b.Property<string>("Memo")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("SubCodeDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SubCodeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CommonCodeID");

                    b.ToTable("CommonCode");

                    b.HasData(
                        new
                        {
                            CommonCodeID = 1,
                            CodeNameEng = "Location",
                            CodeNameKor = "사업장",
                            GroupNo = 1,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 2,
                            CodeNameEng = "Seoul",
                            CodeNameKor = "서울",
                            GroupNo = 1,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsDelete = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeDesc = "1000",
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 3,
                            CodeNameEng = "DB HiTek Bucheon Cam.",
                            CodeNameKor = "DB HiTek 부천캠퍼스",
                            GroupNo = 1,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeDesc = "2000",
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 4,
                            CodeNameEng = "DB HiTek Sangwoo Cam.",
                            CodeNameKor = "DB HiTek 상우캠퍼스",
                            GroupNo = 1,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeDesc = "3000",
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 5,
                            CodeNameEng = "DB GlobalChip",
                            CodeNameKor = "DB GlobalChip",
                            GroupNo = 1,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 4,
                            SubCodeDesc = "6000",
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 6,
                            CodeNameEng = "Company Type",
                            CodeNameKor = "업체구분",
                            GroupNo = 6,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 7,
                            CodeNameEng = "Head Office",
                            CodeNameKor = "본사",
                            GroupNo = 6,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 8,
                            CodeNameEng = "Resident Partner",
                            CodeNameKor = "상주협력사",
                            GroupNo = 6,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 9,
                            CodeNameEng = "NonResident Partner",
                            CodeNameKor = "비상주협력사",
                            GroupNo = 6,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 10,
                            CodeNameEng = "WorkType Code",
                            CodeNameKor = "공종코드",
                            GroupNo = 10,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 11,
                            CodeNameEng = "Electricity",
                            CodeNameKor = "전기",
                            GroupNo = 10,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 12,
                            CodeNameEng = "Construction",
                            CodeNameKor = "토건",
                            GroupNo = 10,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 13,
                            CodeNameEng = "Machine",
                            CodeNameKor = "기계",
                            GroupNo = 10,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 14,
                            CodeNameEng = "Maintenance",
                            CodeNameKor = "정비",
                            GroupNo = 10,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 4,
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 15,
                            CodeNameEng = "Etc",
                            CodeNameKor = "기타",
                            GroupNo = 10,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 5,
                            SubCodeID = 4
                        },
                        new
                        {
                            CommonCodeID = 16,
                            CodeNameEng = "ImmStatus Code",
                            CodeNameKor = "체류자격코드",
                            GroupNo = 16,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 17,
                            CodeNameEng = "F-2",
                            CodeNameKor = "F-2(거주)",
                            GroupNo = 16,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 18,
                            CodeNameEng = "F-4",
                            CodeNameKor = "F-4(재외동포)",
                            GroupNo = 16,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 19,
                            CodeNameEng = "F-5",
                            CodeNameKor = "F-5(영주)",
                            GroupNo = 16,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 20,
                            CodeNameEng = "F-6",
                            CodeNameKor = "F-6(결혼이민)",
                            GroupNo = 16,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 4,
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 21,
                            CodeNameEng = "H-2",
                            CodeNameKor = "H-2(방문취업)",
                            GroupNo = 16,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 5,
                            SubCodeID = 4
                        },
                        new
                        {
                            CommonCodeID = 22,
                            CodeNameEng = "E-9",
                            CodeNameKor = "E-9(비전문취업)",
                            GroupNo = 16,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 6,
                            SubCodeID = 5
                        },
                        new
                        {
                            CommonCodeID = 23,
                            CodeNameEng = "E-9",
                            CodeNameKor = "E-9(비전문취업)",
                            GroupNo = 16,
                            InsertSabun = "1",
                            IsActive = "N",
                            IsSys = "N",
                            OrderNo = 7,
                            SubCodeID = 6
                        },
                        new
                        {
                            CommonCodeID = 24,
                            CodeNameEng = "C-4",
                            CodeNameKor = "C-4(단기취업)",
                            GroupNo = 16,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 8,
                            SubCodeID = 7
                        },
                        new
                        {
                            CommonCodeID = 25,
                            CodeNameEng = "D-7",
                            CodeNameKor = "D-7(주재)",
                            GroupNo = 16,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 9,
                            SubCodeID = 8
                        },
                        new
                        {
                            CommonCodeID = 26,
                            CodeNameEng = "Car Type",
                            CodeNameKor = "차량구분코드",
                            GroupNo = 26,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 27,
                            CodeNameEng = "Passenger Car",
                            CodeNameKor = "개인용",
                            GroupNo = 26,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 28,
                            CodeNameEng = "Business Car",
                            CodeNameKor = "업무용",
                            GroupNo = 26,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 29,
                            CodeNameEng = "",
                            CodeNameKor = "화물(1톤이하)",
                            GroupNo = 26,
                            InsertSabun = "1",
                            IsActive = "N",
                            IsDelete = "Y",
                            IsSys = "N",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 30,
                            CodeNameEng = "",
                            CodeNameKor = "화물(1톤초과)",
                            GroupNo = 26,
                            InsertSabun = "1",
                            IsActive = "N",
                            IsDelete = "Y",
                            IsSys = "N",
                            OrderNo = 4,
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 31,
                            CodeNameEng = "",
                            CodeNameKor = "중장비(특수용도)",
                            GroupNo = 26,
                            InsertSabun = "1",
                            IsActive = "N",
                            IsDelete = "Y",
                            IsSys = "N",
                            OrderNo = 5,
                            SubCodeID = 4
                        },
                        new
                        {
                            CommonCodeID = 32,
                            CodeNameEng = "",
                            CodeNameKor = "기타",
                            GroupNo = 26,
                            InsertSabun = "1",
                            IsActive = "N",
                            IsDelete = "Y",
                            IsSys = "N",
                            OrderNo = 6,
                            SubCodeID = 5
                        },
                        new
                        {
                            CommonCodeID = 33,
                            CodeNameEng = "Visit Purpose",
                            CodeNameKor = "방문목적코드",
                            GroupNo = 33,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 34,
                            CodeNameEng = "Meeting",
                            CodeNameKor = "업무협의",
                            GroupNo = 33,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 35,
                            CodeNameEng = "Construction,/Repair/Setup",
                            CodeNameKor = "공사/수리/Setup",
                            GroupNo = 33,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 36,
                            CodeNameEng = "Delivery",
                            CodeNameKor = "납품",
                            GroupNo = 33,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 37,
                            CodeNameEng = "Education",
                            CodeNameKor = "교육",
                            GroupNo = 33,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 4,
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 38,
                            CodeNameEng = "Public Affairs Others",
                            CodeNameKor = "공무 및 기타",
                            GroupNo = 33,
                            InsertSabun = "1",
                            IsActive = "N",
                            IsSys = "N",
                            OrderNo = 5,
                            SubCodeID = 4
                        },
                        new
                        {
                            CommonCodeID = 39,
                            CodeNameEng = "Import Purpose",
                            CodeNameKor = "반입목적코드",
                            GroupNo = 39,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 40,
                            CodeNameEng = "Setup",
                            CodeNameKor = "Setup",
                            GroupNo = 39,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 41,
                            CodeNameEng = "Construction/Repair",
                            CodeNameKor = "공사/수리",
                            GroupNo = 39,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 42,
                            CodeNameEng = "Equipment Change",
                            CodeNameKor = "장비교체",
                            GroupNo = 39,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 43,
                            CodeNameEng = "",
                            CodeNameKor = "납품",
                            GroupNo = 39,
                            InsertSabun = "1",
                            IsActive = "N",
                            IsDelete = "Y",
                            IsSys = "N",
                            OrderNo = 4,
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 44,
                            CodeNameEng = "PreOrder",
                            CodeNameKor = "선입고",
                            GroupNo = 39,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 5,
                            SubCodeID = 4
                        },
                        new
                        {
                            CommonCodeID = 45,
                            CodeNameEng = "Export Import Purpose Type",
                            CodeNameKor = "반출입목적",
                            GroupNo = 45,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 46,
                            CodeNameEng = "Repair",
                            CodeNameKor = "수리",
                            GroupNo = 45,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeDesc = "2001",
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 47,
                            CodeNameEng = "Reclaim",
                            CodeNameKor = "리클레임",
                            GroupNo = 45,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeDesc = "2002",
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 48,
                            CodeNameEng = "Sale",
                            CodeNameKor = "판매",
                            GroupNo = 45,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeDesc = "2003",
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 49,
                            CodeNameEng = "Cleaning",
                            CodeNameKor = "세정(재생)",
                            GroupNo = 45,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 4,
                            SubCodeDesc = "2004",
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 50,
                            CodeNameEng = "Exchange",
                            CodeNameKor = "교환",
                            GroupNo = 45,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 5,
                            SubCodeDesc = "2005",
                            SubCodeID = 4
                        },
                        new
                        {
                            CommonCodeID = 51,
                            CodeNameEng = "Transfer",
                            CodeNameKor = "이체(이동)",
                            GroupNo = 45,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 6,
                            SubCodeDesc = "2006",
                            SubCodeID = 5
                        },
                        new
                        {
                            CommonCodeID = 52,
                            CodeNameEng = "",
                            CodeNameKor = "기타",
                            GroupNo = 45,
                            InsertSabun = "1",
                            IsActive = "N",
                            IsDelete = "Y",
                            IsSys = "Y",
                            OrderNo = 7,
                            SubCodeDesc = "2007",
                            SubCodeID = 6
                        },
                        new
                        {
                            CommonCodeID = 53,
                            CodeNameEng = "Analysis",
                            CodeNameKor = "분석",
                            GroupNo = 45,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 8,
                            SubCodeDesc = "2008",
                            SubCodeID = 7
                        },
                        new
                        {
                            CommonCodeID = 54,
                            CodeNameEng = "Demo",
                            CodeNameKor = "Demo",
                            GroupNo = 45,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 9,
                            SubCodeDesc = "2009",
                            SubCodeID = 8
                        },
                        new
                        {
                            CommonCodeID = 55,
                            CodeNameEng = "",
                            CodeNameKor = "우수협력업체",
                            GroupNo = 45,
                            InsertSabun = "1",
                            IsActive = "N",
                            IsDelete = "Y",
                            IsSys = "Y",
                            OrderNo = 10,
                            SubCodeDesc = "2010",
                            SubCodeID = 9
                        },
                        new
                        {
                            CommonCodeID = 56,
                            CodeNameEng = "Warranty",
                            CodeNameKor = "Warranty",
                            GroupNo = 45,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 11,
                            SubCodeDesc = "2011",
                            SubCodeID = 10
                        },
                        new
                        {
                            CommonCodeID = 57,
                            CodeNameEng = "Return",
                            CodeNameKor = "반환",
                            GroupNo = 45,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 12,
                            SubCodeDesc = "2012",
                            SubCodeID = 11
                        },
                        new
                        {
                            CommonCodeID = 58,
                            CodeNameEng = "Tablets",
                            CodeNameKor = "태블릿",
                            GroupNo = 45,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 13,
                            SubCodeDesc = "",
                            SubCodeID = 12
                        },
                        new
                        {
                            CommonCodeID = 60,
                            CodeNameEng = "Export Import Type",
                            CodeNameKor = "반출입구분",
                            GroupNo = 60,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 61,
                            CodeNameEng = "Property",
                            CodeNameKor = "자산",
                            GroupNo = 60,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 62,
                            CodeNameEng = "Repair",
                            CodeNameKor = "수리",
                            GroupNo = 60,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 63,
                            CodeNameEng = "Notebook",
                            CodeNameKor = "노트북",
                            GroupNo = 60,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 64,
                            CodeNameEng = "Export Type",
                            CodeNameKor = "반출구분",
                            GroupNo = 64,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 65,
                            CodeNameEng = "External Company",
                            CodeNameKor = "외부업체",
                            GroupNo = 64,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeDesc = "O",
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 66,
                            CodeNameEng = "Inter Factory Movement",
                            CodeNameKor = "공장간이동",
                            GroupNo = 64,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeDesc = "I",
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 67,
                            CodeNameEng = "External Company Passage",
                            CodeNameKor = "외부업체경유공장간이동",
                            GroupNo = 64,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeDesc = "OI",
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 68,
                            CodeNameEng = "Personal Notebook",
                            CodeNameKor = "개인노트북",
                            GroupNo = 64,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 4,
                            SubCodeDesc = "N",
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 69,
                            CodeNameEng = "Rental Notebook",
                            CodeNameKor = "대여노트북",
                            GroupNo = 64,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 5,
                            SubCodeDesc = "",
                            SubCodeID = 4
                        },
                        new
                        {
                            CommonCodeID = 70,
                            CodeNameEng = "Import Type",
                            CodeNameKor = "반입구분",
                            GroupNo = 70,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 71,
                            CodeNameEng = "Bring",
                            CodeNameKor = "반입요",
                            GroupNo = 70,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeDesc = "12001",
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 72,
                            CodeNameEng = "Do Not Bring",
                            CodeNameKor = "반입불요",
                            GroupNo = 70,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeDesc = "12002",
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 73,
                            CodeNameKor = "매각",
                            GroupNo = 70,
                            InsertSabun = "1",
                            IsActive = "N",
                            IsDelete = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeDesc = "12003",
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 74,
                            CodeNameEng = "",
                            CodeNameKor = "반입불요(무상)",
                            GroupNo = 70,
                            InsertSabun = "1",
                            IsActive = "N",
                            IsDelete = "Y",
                            IsSys = "Y",
                            OrderNo = 4,
                            SubCodeDesc = "12004",
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 75,
                            CodeNameEng = "Replacement Item Return",
                            CodeNameKor = "대체품반입요",
                            GroupNo = 70,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 5,
                            SubCodeDesc = "12006",
                            SubCodeID = 4
                        },
                        new
                        {
                            CommonCodeID = 76,
                            CodeNameEng = "Replacement Item Prereceiving",
                            CodeNameKor = "대체품선입고",
                            GroupNo = 70,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 6,
                            SubCodeDesc = "12007",
                            SubCodeID = 5
                        },
                        new
                        {
                            CommonCodeID = 77,
                            CodeNameEng = "Import Way Type",
                            CodeNameKor = "반입자구분",
                            GroupNo = 77,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 78,
                            CodeNameEng = "Agency Registration",
                            CodeNameKor = "대행등록",
                            GroupNo = 77,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 79,
                            CodeNameEng = "Self",
                            CodeNameKor = "본인",
                            GroupNo = 77,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 80,
                            CodeNameEng = "Delivery Method Type",
                            CodeNameKor = "반출물전달방법",
                            GroupNo = 80,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 81,
                            CodeNameEng = "Receipt Visit",
                            CodeNameKor = "방문수령",
                            GroupNo = 80,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeDesc = "8001",
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 82,
                            CodeNameEng = "Mail/Delivery",
                            CodeNameKor = "우편/택배",
                            GroupNo = 80,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeDesc = "8002",
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 83,
                            CodeNameEng = "Receipt Agent",
                            CodeNameKor = "대리인수령",
                            GroupNo = 80,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeDesc = "8003",
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 84,
                            CodeNameEng = "Hand Carry",
                            CodeNameKor = "핸드캐리",
                            GroupNo = 80,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 4,
                            SubCodeDesc = "8004",
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 85,
                            CodeNameEng = "Logistics Vehicle",
                            CodeNameKor = "물류차량",
                            GroupNo = 80,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 5,
                            SubCodeDesc = "8005",
                            SubCodeID = 4
                        },
                        new
                        {
                            CommonCodeID = 86,
                            CodeNameEng = "Place",
                            CodeNameKor = "장소코드",
                            GroupNo = 86,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 87,
                            CodeNameEng = "Bucheon Cam. Fab.",
                            CodeNameKor = "부천캠퍼스 본관",
                            GroupNo = 86,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 88,
                            CodeNameEng = "Bucheon Campus Shocoli",
                            CodeNameKor = "부천캠퍼스 쇼콜리동",
                            GroupNo = 86,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 89,
                            CodeNameEng = "Bucheon Cam. Kindergarden",
                            CodeNameKor = "부천캠퍼스 어린이집",
                            GroupNo = 86,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 90,
                            CodeNameEng = "Sangwoo Cam. Fab.",
                            CodeNameKor = "상우캠퍼스 본관",
                            GroupNo = 86,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 4,
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 91,
                            CodeNameEng = "Sangwoo Admin",
                            CodeNameKor = "상우캠퍼스 어드민동",
                            GroupNo = 86,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 5,
                            SubCodeID = 4
                        },
                        new
                        {
                            CommonCodeID = 92,
                            CodeNameEng = "DBGlobalChip",
                            CodeNameKor = "DBGlobalChip",
                            GroupNo = 86,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 6,
                            SubCodeID = 5
                        },
                        new
                        {
                            CommonCodeID = 93,
                            CodeNameEng = "Clean Room",
                            CodeNameKor = "클린룸",
                            GroupNo = 86,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 7,
                            SubCodeID = 6
                        },
                        new
                        {
                            CommonCodeID = 94,
                            CodeNameEng = "↓↓Accident Preparedness Material Handling Facility↓↓",
                            CodeNameKor = "↓↓사고대비물질 취급시설↓↓",
                            GroupNo = 86,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 8,
                            SubCodeID = 7
                        },
                        new
                        {
                            CommonCodeID = 95,
                            CodeNameEng = "Chemical Storage Warehouse",
                            CodeNameKor = "공통-제한구역-황색-가스케미칼보관창고",
                            GroupNo = 86,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 9,
                            SubCodeID = 8
                        },
                        new
                        {
                            CommonCodeID = 96,
                            CodeNameEng = "Chemical Analysis Room",
                            CodeNameKor = "공통-제한구역-황색-화학분석실",
                            GroupNo = 86,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 10,
                            SubCodeID = 9
                        },
                        new
                        {
                            CommonCodeID = 97,
                            CodeNameEng = "Defect Analysis Office",
                            CodeNameKor = "공통-제한구역-황색-불량분석실",
                            GroupNo = 86,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 11,
                            SubCodeID = 10
                        },
                        new
                        {
                            CommonCodeID = 98,
                            CodeNameEng = "CCSS",
                            CodeNameKor = "공통-제한구역-황색-CCSS",
                            GroupNo = 86,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 12,
                            SubCodeID = 11
                        },
                        new
                        {
                            CommonCodeID = 99,
                            CodeNameEng = "MBR",
                            CodeNameKor = "부천-제한구역-황색-MBR",
                            GroupNo = 86,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 13,
                            SubCodeID = 12
                        },
                        new
                        {
                            CommonCodeID = 100,
                            CodeNameEng = "WWT",
                            CodeNameKor = "상우-제한구역-황색-WWT",
                            GroupNo = 86,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 14,
                            SubCodeID = 13
                        },
                        new
                        {
                            CommonCodeID = 101,
                            CodeNameEng = "Sulfuric Acid Tank",
                            CodeNameKor = "부천-제한구역-황색-황산탱크(옥상)",
                            GroupNo = 86,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 15,
                            SubCodeID = 14
                        },
                        new
                        {
                            CommonCodeID = 102,
                            CodeNameEng = "Carry Item",
                            CodeNameKor = "휴대물품구분코드",
                            GroupNo = 102,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 103,
                            CodeNameEng = "Laptops and PC",
                            CodeNameKor = "노트북 및 PC ",
                            GroupNo = 102,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 104,
                            CodeNameEng = "Work Tools",
                            CodeNameKor = "작업공도구",
                            GroupNo = 102,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 105,
                            CodeNameEng = "Camera",
                            CodeNameKor = "카메라",
                            GroupNo = 102,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsDelete = "Y",
                            IsSys = "N",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 106,
                            CodeNameEng = "Etc",
                            CodeNameKor = "기타",
                            GroupNo = 102,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 4,
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 107,
                            CodeNameEng = "Card Issue Type",
                            CodeNameKor = "출입증발급구분",
                            GroupNo = 107,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 108,
                            CodeNameEng = "New",
                            CodeNameKor = "신규",
                            GroupNo = 107,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 109,
                            CodeNameEng = "Reissuance",
                            CodeNameKor = "재발급",
                            GroupNo = 107,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 110,
                            CodeNameEng = "Visit Apply Type",
                            CodeNameKor = "방문신청구분",
                            GroupNo = 110,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 111,
                            CodeNameEng = "Application Visit",
                            CodeNameKor = "방문신청",
                            GroupNo = 110,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 112,
                            CodeNameEng = "Application Work Visit",
                            CodeNameKor = "공사출입인원신청",
                            GroupNo = 110,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 113,
                            CodeNameEng = "Safety Education",
                            CodeNameKor = "안전교육",
                            GroupNo = 110,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 114,
                            CodeNameEng = "Visitor Manual ",
                            CodeNameKor = "방문객수기등록",
                            GroupNo = 110,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 4,
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 115,
                            CodeNameEng = "Delivery",
                            CodeNameKor = "택배",
                            GroupNo = 110,
                            InsertSabun = "1",
                            IsActive = "N",
                            IsDelete = "Y",
                            IsSys = "Y",
                            OrderNo = 5,
                            SubCodeID = 4
                        },
                        new
                        {
                            CommonCodeID = 116,
                            CodeNameEng = "Vip Type",
                            CodeNameKor = "VIP구분코드",
                            GroupNo = 116,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 117,
                            CodeNameEng = "Important Buyer",
                            CodeNameKor = "중요바이어",
                            GroupNo = 116,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 118,
                            CodeNameEng = "SMS Type",
                            CodeNameKor = "SMS발송구분",
                            GroupNo = 118,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 119,
                            CodeNameEng = "",
                            CodeNameKor = "방문객 개인정보동의 및 교육 안내",
                            GroupNo = 118,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 120,
                            CodeNameEng = "Company Status",
                            CodeNameKor = "업체상태",
                            GroupNo = 120,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 121,
                            CodeNameEng = "Waiting Approval",
                            CodeNameKor = "승인대기",
                            GroupNo = 120,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 122,
                            CodeNameEng = "Approved",
                            CodeNameKor = "승인완료",
                            GroupNo = 120,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 123,
                            CodeNameEng = "Companion",
                            CodeNameKor = "반려",
                            GroupNo = 120,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 124,
                            CodeNameEng = "Card Issue Status",
                            CodeNameKor = "출입증발급상태",
                            GroupNo = 124,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 125,
                            CodeNameEng = "Issuance",
                            CodeNameKor = "발급",
                            GroupNo = 124,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 126,
                            CodeNameEng = "Not issued",
                            CodeNameKor = "미발급",
                            GroupNo = 124,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 127,
                            CodeNameEng = "CardApplyStatus",
                            CodeNameKor = "출입증신청상태",
                            GroupNo = 127,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 128,
                            CodeNameEng = "Waiting Approval",
                            CodeNameKor = "승인대기",
                            GroupNo = 127,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 129,
                            CodeNameEng = "Approved",
                            CodeNameKor = "승인완료",
                            GroupNo = 127,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 130,
                            CodeNameEng = "Companion",
                            CodeNameKor = "반려",
                            GroupNo = 127,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 131,
                            CodeNameEng = "Temp Card Issue Status",
                            CodeNameKor = "임시증발급상태",
                            GroupNo = 131,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 132,
                            CodeNameEng = "Issuance",
                            CodeNameKor = "발급",
                            GroupNo = 131,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 133,
                            CodeNameEng = "Collection",
                            CodeNameKor = "회수",
                            GroupNo = 131,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 134,
                            CodeNameEng = "Companion",
                            CodeNameKor = "반려",
                            GroupNo = 131,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsDelete = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 135,
                            CodeNameEng = "Waiting Approval",
                            CodeNameKor = "승인대기",
                            GroupNo = 131,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsDelete = "Y",
                            IsSys = "Y",
                            OrderNo = 4,
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 136,
                            CodeNameEng = "Safety Violation Status",
                            CodeNameKor = "안전수칙위반상태",
                            GroupNo = 136,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 137,
                            CodeNameEng = "New Issue",
                            CodeNameKor = "신규발행",
                            GroupNo = 136,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 138,
                            CodeNameEng = "Prevention Measures Registration",
                            CodeNameKor = "방지대책등록",
                            GroupNo = 136,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 139,
                            CodeNameEng = "Prevention Measures Approved",
                            CodeNameKor = "방지대책승인",
                            GroupNo = 136,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 140,
                            CodeNameEng = "Request Reregistration Preventive Measures",
                            CodeNameKor = "방지대책재등록요청",
                            GroupNo = 136,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 4,
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 141,
                            CodeNameEng = "BlackList Status",
                            CodeNameKor = "블랙리스트상태",
                            GroupNo = 141,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 142,
                            CodeNameEng = "Registration Request",
                            CodeNameKor = "등록요청",
                            GroupNo = 141,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 143,
                            CodeNameEng = "Registration",
                            CodeNameKor = "등록",
                            GroupNo = 141,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 144,
                            CodeNameEng = "Visit Apply Status",
                            CodeNameKor = "방문신청상태",
                            GroupNo = 144,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 145,
                            CodeNameEng = "Waiting Approval",
                            CodeNameKor = "승인대기",
                            GroupNo = 144,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 146,
                            CodeNameEng = "Approved",
                            CodeNameKor = "승인완료",
                            GroupNo = 144,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 147,
                            CodeNameEng = "Companion",
                            CodeNameKor = "반려",
                            GroupNo = 144,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 148,
                            CodeNameEng = "Unapproved",
                            CodeNameKor = "미승인",
                            GroupNo = 144,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 4,
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 149,
                            CodeNameEng = "End Visit",
                            CodeNameKor = "방문종료",
                            GroupNo = 144,
                            InsertSabun = "1",
                            IsActive = "N",
                            IsDelete = "Y",
                            IsSys = "Y",
                            OrderNo = 5,
                            SubCodeID = 4
                        },
                        new
                        {
                            CommonCodeID = 150,
                            CodeNameEng = "Visit Status",
                            CodeNameKor = "방문상태",
                            GroupNo = 150,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 151,
                            CodeNameEng = "Waiting Visit",
                            CodeNameKor = "방문대기",
                            GroupNo = 150,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 152,
                            CodeNameEng = "Visit",
                            CodeNameKor = "방문",
                            GroupNo = 150,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 153,
                            CodeNameEng = "Visit Completed",
                            CodeNameKor = "방문완료",
                            GroupNo = 150,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 154,
                            CodeNameEng = "Not Returned",
                            CodeNameKor = "미반납",
                            GroupNo = 150,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 4,
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 155,
                            CodeNameEng = "End Visit",
                            CodeNameKor = "방문종료",
                            GroupNo = 150,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 5,
                            SubCodeID = 4
                        },
                        new
                        {
                            CommonCodeID = 156,
                            CodeNameEng = "Education Apply Status",
                            CodeNameKor = "교육신청상태",
                            GroupNo = 156,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 157,
                            CodeNameEng = "Waiting Approval",
                            CodeNameKor = "승인대기",
                            GroupNo = 156,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 158,
                            CodeNameEng = "Approved",
                            CodeNameKor = "승인완료",
                            GroupNo = 156,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 159,
                            CodeNameEng = "Education Complete Status",
                            CodeNameKor = "교육이수상태",
                            GroupNo = 159,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 160,
                            CodeNameEng = "Not Complete",
                            CodeNameKor = "미이수",
                            GroupNo = 159,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 161,
                            CodeNameEng = "Complete",
                            CodeNameKor = "이수",
                            GroupNo = 159,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 162,
                            CodeNameEng = "Export Import Status",
                            CodeNameKor = "반출입상태",
                            GroupNo = 162,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 163,
                            CodeNameEng = "Application",
                            CodeNameKor = "신청",
                            GroupNo = 162,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsDelete = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 164,
                            CodeNameEng = "Export Approval Request",
                            CodeNameKor = "반출상신",
                            GroupNo = 162,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsDelete = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 165,
                            CodeNameEng = "Approval Complete",
                            CodeNameKor = "결재완료",
                            GroupNo = 162,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsDelete = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 166,
                            CodeNameEng = "Companion",
                            CodeNameKor = "반려",
                            GroupNo = 162,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsDelete = "Y",
                            IsSys = "Y",
                            OrderNo = 4,
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 167,
                            CodeNameEng = "Waiting Export",
                            CodeNameKor = "반출대기",
                            GroupNo = 162,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 5,
                            SubCodeID = 4
                        },
                        new
                        {
                            CommonCodeID = 168,
                            CodeNameEng = "Carry Item Status",
                            CodeNameKor = "휴대물품반입반출상태",
                            GroupNo = 168,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 169,
                            CodeNameEng = "Waiting Bring",
                            CodeNameKor = "반입대기",
                            GroupNo = 168,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeDesc = "13001",
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 170,
                            CodeNameEng = "Carry In Completed",
                            CodeNameKor = "반입완료",
                            GroupNo = 168,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeDesc = "",
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 171,
                            CodeNameEng = "Waiting Confirmation",
                            CodeNameKor = "확인대기",
                            GroupNo = 168,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeDesc = "13003",
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 172,
                            CodeNameEng = "TakeOut",
                            CodeNameKor = "반출요",
                            GroupNo = 168,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 4,
                            SubCodeDesc = "",
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 173,
                            CodeNameEng = "Do Not TakeOut",
                            CodeNameKor = "반출불필요(유상)",
                            GroupNo = 168,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 5,
                            SubCodeDesc = "",
                            SubCodeID = 4
                        },
                        new
                        {
                            CommonCodeID = 174,
                            CodeNameEng = "Do Not TakeOut(No)",
                            CodeNameKor = "반출불필요(무상)",
                            GroupNo = 168,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 6,
                            SubCodeDesc = "",
                            SubCodeID = 5
                        },
                        new
                        {
                            CommonCodeID = 175,
                            CodeNameEng = "PreOrder",
                            CodeNameKor = "선입고",
                            GroupNo = 168,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 7,
                            SubCodeDesc = "",
                            SubCodeID = 6
                        },
                        new
                        {
                            CommonCodeID = 176,
                            CodeNameEng = "Waiting Take Out",
                            CodeNameKor = "반출대기",
                            GroupNo = 168,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 8,
                            SubCodeDesc = "13002",
                            SubCodeID = 7
                        },
                        new
                        {
                            CommonCodeID = 177,
                            CodeNameEng = "Carry Item Apply Status",
                            CodeNameKor = "휴대물품신청상태",
                            GroupNo = 177,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 178,
                            CodeNameEng = "Application",
                            CodeNameKor = "신청",
                            GroupNo = 177,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 179,
                            CodeNameEng = "Payment Completed",
                            CodeNameKor = "결재완료 ",
                            GroupNo = 177,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 180,
                            CodeNameEng = "Companion",
                            CodeNameKor = "반려",
                            GroupNo = 177,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 181,
                            CodeNameEng = "Under Approval",
                            CodeNameKor = "결재중",
                            GroupNo = 177,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 4,
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 182,
                            CodeNameEng = "Approved",
                            CodeNameKor = "승인완료",
                            GroupNo = 177,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 5,
                            SubCodeID = 4
                        },
                        new
                        {
                            CommonCodeID = 183,
                            CodeNameEng = "Meal Type",
                            CodeNameKor = "식수구분",
                            GroupNo = 183,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 184,
                            CodeNameEng = "Unusual Meal",
                            CodeNameKor = "이상식수",
                            GroupNo = 183,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 185,
                            CodeNameEng = "Breakfast",
                            CodeNameKor = "조식",
                            GroupNo = 183,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 186,
                            CodeNameEng = "Lunch",
                            CodeNameKor = "중식",
                            GroupNo = 183,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 187,
                            CodeNameEng = "Dinner",
                            CodeNameKor = "석식",
                            GroupNo = 183,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 4,
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 188,
                            CodeNameEng = "LatenightMeal",
                            CodeNameKor = "야식",
                            GroupNo = 183,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 5,
                            SubCodeID = 4
                        },
                        new
                        {
                            CommonCodeID = 189,
                            CodeNameEng = "Term Type",
                            CodeNameKor = "계절구분",
                            GroupNo = 189,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 190,
                            CodeNameEng = "Summer Season Term",
                            CodeNameKor = "하계",
                            GroupNo = 189,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 191,
                            CodeNameEng = "Winter Season Term",
                            CodeNameKor = "동계",
                            GroupNo = 189,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 192,
                            CodeNameEng = "Meal Menual Type",
                            CodeNameKor = "수기등록구분",
                            GroupNo = 192,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 193,
                            CodeNameEng = "Reader",
                            CodeNameKor = "식수리더",
                            GroupNo = 192,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 194,
                            CodeNameEng = "Menual",
                            CodeNameKor = "수기등록",
                            GroupNo = 192,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 195,
                            CodeNameEng = "Foreigner Type",
                            CodeNameKor = "외국인구분",
                            GroupNo = 195,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 196,
                            CodeNameEng = "Domestic",
                            CodeNameKor = "내국인",
                            GroupNo = 195,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 197,
                            CodeNameEng = "Foreigner",
                            CodeNameKor = "외국인",
                            GroupNo = 195,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 198,
                            CodeNameEng = "Gender Type",
                            CodeNameKor = "성별구분",
                            GroupNo = 198,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 199,
                            CodeNameEng = "Man",
                            CodeNameKor = "남",
                            GroupNo = 198,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 200,
                            CodeNameEng = "Woman",
                            CodeNameKor = "여",
                            GroupNo = 198,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 201,
                            CodeNameEng = "Visitor Type",
                            CodeNameKor = "방문자구분",
                            GroupNo = 201,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 202,
                            CodeNameEng = "Employees",
                            CodeNameKor = "임직원",
                            GroupNo = 201,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 203,
                            CodeNameEng = "Visitor",
                            CodeNameKor = "방문자",
                            GroupNo = 201,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 204,
                            CodeNameEng = "Person Status",
                            CodeNameKor = "재직상태",
                            GroupNo = 204,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 205,
                            CodeNameEng = "Hold Office",
                            CodeNameKor = "재직",
                            GroupNo = 204,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 206,
                            CodeNameEng = "Take time Off",
                            CodeNameKor = "휴직",
                            GroupNo = 204,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 207,
                            CodeNameEng = "Rretirement",
                            CodeNameKor = "퇴직",
                            GroupNo = 204,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 208,
                            CodeNameEng = "Approval Type",
                            CodeNameKor = "결재유형",
                            GroupNo = 208,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 209,
                            CodeNameEng = "Add Person",
                            CodeNameKor = "사원추가",
                            GroupNo = 208,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 210,
                            CodeNameEng = "Add Card",
                            CodeNameKor = "카드추가",
                            GroupNo = 208,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 211,
                            CodeNameEng = "Apply Export Import ",
                            CodeNameKor = "반출입신청",
                            GroupNo = 208,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 212,
                            CodeNameEng = "Apply Work",
                            CodeNameKor = "공사신청",
                            GroupNo = 208,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 4,
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 213,
                            CodeNameEng = "Apply Safety Education",
                            CodeNameKor = "안전교육신청",
                            GroupNo = 208,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 5,
                            SubCodeID = 4
                        },
                        new
                        {
                            CommonCodeID = 214,
                            CodeNameEng = "Approval Sys Type",
                            CodeNameKor = "결재자유형",
                            GroupNo = 214,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 215,
                            CodeNameEng = "Management System",
                            CodeNameKor = "통문관리시스템",
                            GroupNo = 214,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 216,
                            CodeNameEng = "ERP",
                            CodeNameKor = "ERP",
                            GroupNo = 214,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 217,
                            CodeNameEng = "User Settings",
                            CodeNameKor = "사용자설정",
                            GroupNo = 214,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 218,
                            CodeNameEng = "Person Type",
                            CodeNameKor = "회원구분",
                            GroupNo = 218,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 219,
                            CodeNameEng = "Executives",
                            CodeNameKor = "임직원",
                            GroupNo = 218,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 220,
                            CodeNameEng = "Resident Employee",
                            CodeNameKor = "상주직원",
                            GroupNo = 218,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 221,
                            CodeNameEng = "NonResident Manager",
                            CodeNameKor = "비상주관리자",
                            GroupNo = 218,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 222,
                            CodeNameEng = "NonResident Employee",
                            CodeNameKor = "비상주직원",
                            GroupNo = 218,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 4,
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 223,
                            CodeNameEng = "Visitor",
                            CodeNameKor = "방문객",
                            GroupNo = 218,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 5,
                            SubCodeID = 4
                        },
                        new
                        {
                            CommonCodeID = 224,
                            CodeNameEng = "Etc",
                            CodeNameKor = "기타",
                            GroupNo = 39,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 6,
                            SubCodeID = 5
                        },
                        new
                        {
                            CommonCodeID = 225,
                            CodeNameEng = "WorkApply Status",
                            CodeNameKor = "공사신청상태",
                            GroupNo = 225,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 226,
                            CodeNameEng = "Waiting Approval",
                            CodeNameKor = "승인대기",
                            GroupNo = 225,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 227,
                            CodeNameEng = "Approved",
                            CodeNameKor = "승인완료",
                            GroupNo = 225,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 228,
                            CodeNameEng = "Companion",
                            CodeNameKor = "반려",
                            GroupNo = 225,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 229,
                            CodeNameEng = "WorkVisitApply Status",
                            CodeNameKor = "공사출입신청상태",
                            GroupNo = 229,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 230,
                            CodeNameEng = "Waiting Approval",
                            CodeNameKor = "승인대기",
                            GroupNo = 229,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 231,
                            CodeNameEng = "Approved",
                            CodeNameKor = "승인완료",
                            GroupNo = 229,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 232,
                            CodeNameEng = "Companion",
                            CodeNameKor = "반려",
                            GroupNo = 229,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 233,
                            CodeNameEng = "Visit Manual Purpose",
                            CodeNameKor = "방문수기등록방문목적",
                            GroupNo = 233,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 234,
                            CodeNameEng = "Delivery",
                            CodeNameKor = "택배",
                            GroupNo = 233,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 235,
                            CodeNameEng = "BlackList Type",
                            CodeNameKor = "등록사유구분",
                            GroupNo = 235,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 236,
                            CodeNameEng = "Retired Employee",
                            CodeNameKor = "퇴직임직원",
                            GroupNo = 235,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 237,
                            CodeNameEng = "Violation Safety Rules",
                            CodeNameKor = "안전수칙위반",
                            GroupNo = 235,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 238,
                            CodeNameEng = "Violation Security Rules",
                            CodeNameKor = "보안수칙위반",
                            GroupNo = 235,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 239,
                            CodeNameEng = "Etc",
                            CodeNameKor = "기타",
                            GroupNo = 235,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 4,
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 240,
                            CodeNameEng = "Release",
                            CodeNameKor = "해제",
                            GroupNo = 141,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 241,
                            CodeNameEng = "Carry Item Import Type",
                            CodeNameKor = "휴대물품반입구분",
                            GroupNo = 241,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 242,
                            CodeNameEng = "Waiting Bring",
                            CodeNameKor = "반입대기",
                            GroupNo = 241,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 243,
                            CodeNameEng = "Carryin Processing",
                            CodeNameKor = "반입처리",
                            GroupNo = 241,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 244,
                            CodeNameEng = "Take Out",
                            CodeNameKor = "반출요",
                            GroupNo = 241,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 245,
                            CodeNameEng = "Not Allowed Take Out",
                            CodeNameKor = "반출불가",
                            GroupNo = 241,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 4,
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 246,
                            CodeNameEng = "No Need Take Out",
                            CodeNameKor = "반출불필요(유상)",
                            GroupNo = 241,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 5,
                            SubCodeID = 4
                        },
                        new
                        {
                            CommonCodeID = 247,
                            CodeNameEng = "No Need Take Out(free)",
                            CodeNameKor = "반출불필요(무상)",
                            GroupNo = 241,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 6,
                            SubCodeID = 5
                        },
                        new
                        {
                            CommonCodeID = 248,
                            CodeNameEng = "Receipt Confirmation",
                            CodeNameKor = "입고확인 ",
                            GroupNo = 241,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 7,
                            SubCodeID = 6
                        },
                        new
                        {
                            CommonCodeID = 249,
                            CodeNameEng = "Card Type",
                            CodeNameKor = "출입증구분",
                            GroupNo = 249,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 250,
                            CodeNameEng = "General Pass",
                            CodeNameKor = "일반",
                            GroupNo = 249,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 251,
                            CodeNameEng = "Visitor Pass",
                            CodeNameKor = "방문증",
                            GroupNo = 249,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 252,
                            CodeNameEng = "Lost",
                            CodeNameKor = "분실",
                            GroupNo = 124,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 253,
                            CodeNameEng = "Dormancy",
                            CodeNameKor = "휴면",
                            GroupNo = 124,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsDelete = "Y",
                            IsSys = "N",
                            OrderNo = 4,
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 254,
                            CodeNameEng = "Unit",
                            CodeNameKor = "단위",
                            GroupNo = 254,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 0
                        },
                        new
                        {
                            CommonCodeID = 255,
                            CodeNameEng = "Count",
                            CodeNameKor = "개",
                            GroupNo = 254,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 1,
                            SubCodeID = 0
                        },
                        new
                        {
                            CommonCodeID = 256,
                            CodeNameEng = "Mark",
                            CodeNameKor = "대",
                            GroupNo = 254,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 2,
                            SubCodeID = 1
                        },
                        new
                        {
                            CommonCodeID = 257,
                            CodeNameEng = "EA",
                            CodeNameKor = "EA",
                            GroupNo = 254,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 3,
                            SubCodeID = 2
                        },
                        new
                        {
                            CommonCodeID = 258,
                            CodeNameEng = "SIK",
                            CodeNameKor = "SIK",
                            GroupNo = 254,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "N",
                            OrderNo = 4,
                            SubCodeID = 3
                        },
                        new
                        {
                            CommonCodeID = 259,
                            CodeNameEng = "Export Confirmation",
                            CodeNameKor = "반출확인",
                            GroupNo = 162,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 6,
                            SubCodeID = 5
                        },
                        new
                        {
                            CommonCodeID = 260,
                            CodeNameEng = "Return Front Door",
                            CodeNameKor = "정문반송",
                            GroupNo = 162,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 7,
                            SubCodeID = 6
                        },
                        new
                        {
                            CommonCodeID = 261,
                            CodeNameEng = "Organic Recovery Room",
                            CodeNameKor = "상우-제한구역-황색-유기회수실",
                            GroupNo = 86,
                            InsertSabun = "1",
                            IsActive = "Y",
                            IsSys = "Y",
                            OrderNo = 16,
                            SubCodeID = 15
                        });
                });

            modelBuilder.Entity("WebVisit.Models.CommonCodeHistory", b =>
                {
                    b.Property<int>("CommonCodeHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommonCodeHistoryID"));

                    b.Property<string>("CodeNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CodeNameKor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CommonCodeID")
                        .HasColumnType("int");

                    b.Property<int>("GroupNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsActive")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("IsSys")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Memo")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("SubCodeDesc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SubCodeID")
                        .HasColumnType("int");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CommonCodeHistoryID");

                    b.ToTable("CommonCodeHistory");
                });

            modelBuilder.Entity("WebVisit.Models.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyID"));

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ApprovalName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovalOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovalSabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalTel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BizFileData")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("BizFileDataHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("BizRegNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CeoName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CompanyStatus")
                        .HasColumnType("int");

                    b.Property<int>("CompanyType")
                        .HasColumnType("int");

                    b.Property<string>("ContactPersonName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactPersonTel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CompanyID");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("WebVisit.Models.CompanyHistory", b =>
                {
                    b.Property<int>("CompanyHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyHistoryID"));

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ApprovalName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovalOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovalSabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalTel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BizFileData")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("BizFileDataHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("BizRegNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CeoName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CompanyStatus")
                        .HasColumnType("int");

                    b.Property<int>("CompanyType")
                        .HasColumnType("int");

                    b.Property<string>("ContactPersonName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactPersonTel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CompanyHistoryID");

                    b.ToTable("CompanyHistory");
                });

            modelBuilder.Entity("WebVisit.Models.ExportImport", b =>
                {
                    b.Property<int>("ExportImportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExportImportID"));

                    b.Property<string>("ApprovalName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovalOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovalSabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalTel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BizRegNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CeoApprovalFileData")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("CeoApprovalFileDataHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CompanyContactName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CompanySabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyTel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactSabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactTel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DeliveryMethodType")
                        .HasColumnType("int");

                    b.Property<string>("ExportDate")
                        .HasColumnType("char(10)");

                    b.Property<string>("ExportDateHour")
                        .HasColumnType("char(2)");

                    b.Property<string>("ExportDateMinute")
                        .HasColumnType("char(2)");

                    b.Property<int>("ExportImportApplyStatus")
                        .HasColumnType("int");

                    b.Property<string>("ExportImportNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ExportImportPurposeType")
                        .HasColumnType("int");

                    b.Property<int>("ExportImportStatus")
                        .HasColumnType("int");

                    b.Property<int>("ExportImportType")
                        .HasColumnType("int");

                    b.Property<string>("ExportLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ExportType")
                        .HasColumnType("int");

                    b.Property<string>("ImportDate")
                        .HasColumnType("char(10)");

                    b.Property<string>("ImportDateHour")
                        .HasColumnType("char(2)");

                    b.Property<string>("ImportDateMinute")
                        .HasColumnType("char(2)");

                    b.Property<string>("ImportLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ImportType")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("IsSelf")
                        .HasColumnType("char(1)");

                    b.Property<string>("IsSelfApproval")
                        .HasColumnType("char(1)");

                    b.Property<string>("IsVMI")
                        .HasColumnType("char(1)");

                    b.Property<string>("ManagementNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Reason")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Sabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SerialNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExportImportID");

                    b.ToTable("ExportImport");
                });

            modelBuilder.Entity("WebVisit.Models.ExportImportHistory", b =>
                {
                    b.Property<int>("ExportImportHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExportImportHistoryID"));

                    b.Property<string>("ApprovalName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovalOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovalSabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalTel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BizRegNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CeoApprovalFileData")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("CeoApprovalFileDataHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("CheckCnt")
                        .HasColumnType("int");

                    b.Property<string>("CompanyContactName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CompanySabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyTel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactSabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactTel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("DeliveryMethodType")
                        .HasColumnType("int");

                    b.Property<string>("ExportDate")
                        .HasColumnType("char(10)");

                    b.Property<string>("ExportDateHour")
                        .HasColumnType("char(2)");

                    b.Property<string>("ExportDateMinute")
                        .HasColumnType("char(2)");

                    b.Property<int>("ExportImportApplyStatus")
                        .HasColumnType("int");

                    b.Property<int>("ExportImportID")
                        .HasColumnType("int");

                    b.Property<string>("ExportImportNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ExportImportPurposeType")
                        .HasColumnType("int");

                    b.Property<int>("ExportImportStatus")
                        .HasColumnType("int");

                    b.Property<int>("ExportImportType")
                        .HasColumnType("int");

                    b.Property<string>("ExportLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ExportType")
                        .HasColumnType("int");

                    b.Property<string>("ImportDate")
                        .HasColumnType("char(10)");

                    b.Property<string>("ImportDateHour")
                        .HasColumnType("char(2)");

                    b.Property<string>("ImportDateMinute")
                        .HasColumnType("char(2)");

                    b.Property<string>("ImportLocation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ImportType")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsSelf")
                        .HasColumnType("char(1)");

                    b.Property<string>("IsSelfApproval")
                        .HasColumnType("char(1)");

                    b.Property<string>("IsVMI")
                        .HasColumnType("char(1)");

                    b.Property<string>("ManagementNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Opinion")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Reason")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Sabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SerialNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateGradeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ExportImportHistoryID");

                    b.ToTable("ExportImportHistory");
                });

            modelBuilder.Entity("WebVisit.Models.ExportImportItem", b =>
                {
                    b.Property<int>("ExportImportItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExportImportItemID"));

                    b.Property<int>("ExportImportID")
                        .HasColumnType("int");

                    b.Property<float?>("ImportCnt")
                        .HasColumnType("real");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("MaterialsCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaterialsName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Memo")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("PRNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float?>("Quantity")
                        .HasColumnType("real");

                    b.Property<float?>("RemainCnt")
                        .HasColumnType("real");

                    b.Property<string>("Standard")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ExportImportItemID");

                    b.ToTable("ExportImportItem");
                });

            modelBuilder.Entity("WebVisit.Models.ExportImportItemHistory", b =>
                {
                    b.Property<int>("ExportImportItemHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExportImportItemHistoryID"));

                    b.Property<int>("ExportImportID")
                        .HasColumnType("int");

                    b.Property<int>("ExportImportItemID")
                        .HasColumnType("int");

                    b.Property<float?>("ImportCnt")
                        .HasColumnType("real");

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaterialsCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaterialsName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Memo")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("PRNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float?>("Quantity")
                        .HasColumnType("real");

                    b.Property<float?>("RemainCnt")
                        .HasColumnType("real");

                    b.Property<string>("Standard")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ExportImportItemHistoryID");

                    b.ToTable("ExportImportItemHistory");
                });

            modelBuilder.Entity("WebVisit.Models.Holiday", b =>
                {
                    b.Property<int>("HolidayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HolidayID"));

                    b.Property<string>("HolidayDate")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<string>("HolidayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValue("N");

                    b.Property<string>("IsManual")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasDefaultValue("N");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("HolidayID");

                    b.ToTable("Holiday");

                    b.HasData(
                        new
                        {
                            HolidayID = 1,
                            HolidayDate = "2023-01-01",
                            HolidayName = "설날",
                            InsertSabun = "1"
                        },
                        new
                        {
                            HolidayID = 2,
                            HolidayDate = "2023-03-01",
                            HolidayName = "삼일절",
                            InsertSabun = "1"
                        },
                        new
                        {
                            HolidayID = 3,
                            HolidayDate = "2023-05-05",
                            HolidayName = "어린이날",
                            InsertSabun = "1"
                        });
                });

            modelBuilder.Entity("WebVisit.Models.Level", b =>
                {
                    b.Property<int>("LevelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LevelID"));

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValue("N");

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("LevelID");

                    b.ToTable("Level");

                    b.HasData(
                        new
                        {
                            LevelID = 1,
                            InsertSabun = "1",
                            LevelName = "마스터관리자"
                        },
                        new
                        {
                            LevelID = 2,
                            InsertSabun = "1",
                            LevelName = "일반관리자"
                        },
                        new
                        {
                            LevelID = 3,
                            InsertSabun = "1",
                            LevelName = "임직원(일반)"
                        },
                        new
                        {
                            LevelID = 4,
                            InsertSabun = "1",
                            LevelName = "임직원(인사)"
                        },
                        new
                        {
                            LevelID = 5,
                            InsertSabun = "1",
                            LevelName = "임직원(ESH)"
                        },
                        new
                        {
                            LevelID = 6,
                            InsertSabun = "1",
                            LevelName = "임직원(영양사)"
                        },
                        new
                        {
                            LevelID = 7,
                            InsertSabun = "1",
                            LevelName = "비상주"
                        },
                        new
                        {
                            LevelID = 8,
                            InsertSabun = "1",
                            LevelName = "보안실"
                        },
                        new
                        {
                            LevelID = 9,
                            InsertSabun = "1",
                            LevelName = "비상주업체"
                        },
                        new
                        {
                            LevelID = 10,
                            InsertSabun = "1",
                            LevelName = "임직원(구매)"
                        });
                });

            modelBuilder.Entity("WebVisit.Models.LevelHistory", b =>
                {
                    b.Property<int>("LevelHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LevelHistoryID"));

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LevelID")
                        .HasColumnType("int");

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LevelHistoryID");

                    b.ToTable("LevelHistory");
                });

            modelBuilder.Entity("WebVisit.Models.Material", b =>
                {
                    b.Property<int>("MaterialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialID"));

                    b.Property<string>("DIV_CODE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValue("N");

                    b.Property<string>("STOCK_CODE")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("STOCK_NM")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("STOCK_RULE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("STOCK_UNIT")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("W_DATE")
                        .HasColumnType("char(10)");

                    b.HasKey("MaterialID");

                    b.ToTable("Material");

                    b.HasData(
                        new
                        {
                            MaterialID = 1,
                            DIV_CODE = "11",
                            STOCK_CODE = "B_GRINDING_CHG",
                            STOCK_NM = "Back Grinding Service Charge",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2005-06-07"
                        },
                        new
                        {
                            MaterialID = 2,
                            DIV_CODE = "11",
                            STOCK_CODE = "N00MSKIG",
                            STOCK_NM = "MASK",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2019-02-21"
                        },
                        new
                        {
                            MaterialID = 3,
                            DIV_CODE = "11",
                            STOCK_CODE = "N00MSKME",
                            STOCK_NM = "MASK",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2017-12-01"
                        },
                        new
                        {
                            MaterialID = 4,
                            DIV_CODE = "11",
                            STOCK_CODE = "N00PRBSJ",
                            STOCK_NM = "PROBE CARD",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2017-12-06"
                        },
                        new
                        {
                            MaterialID = 5,
                            DIV_CODE = "11",
                            STOCK_CODE = "N00SPCIG",
                            STOCK_NM = "Sample Wafer",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2020-02-25"
                        },
                        new
                        {
                            MaterialID = 6,
                            DIV_CODE = "11",
                            STOCK_CODE = "N00SPCME",
                            STOCK_NM = "Sample Wafer",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2018-03-14"
                        },
                        new
                        {
                            MaterialID = 7,
                            DIV_CODE = "11",
                            STOCK_CODE = "N00SPCMO",
                            STOCK_NM = "Sample Wafer",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2019-04-22"
                        },
                        new
                        {
                            MaterialID = 8,
                            DIV_CODE = "11",
                            STOCK_CODE = "N00SPCSJ",
                            STOCK_NM = "Sample Wafer",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2018-12-11"
                        },
                        new
                        {
                            MaterialID = 9,
                            DIV_CODE = "11",
                            STOCK_CODE = "N00TSCIG",
                            STOCK_NM = "SCRAP",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2019-03-08"
                        },
                        new
                        {
                            MaterialID = 10,
                            DIV_CODE = "11",
                            STOCK_CODE = "N00TSCMO",
                            STOCK_NM = "SCRAP",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2020-02-28"
                        },
                        new
                        {
                            MaterialID = 11,
                            DIV_CODE = "11",
                            STOCK_CODE = "N00TTSMO",
                            STOCK_NM = "TEST",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2017-09-27"
                        },
                        new
                        {
                            MaterialID = 12,
                            DIV_CODE = "11",
                            STOCK_CODE = "N06MSKMO",
                            STOCK_NM = "MASK",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2016-06-09"
                        },
                        new
                        {
                            MaterialID = 13,
                            DIV_CODE = "11",
                            STOCK_CODE = "N06TTSMO",
                            STOCK_NM = "TEST",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2016-06-09"
                        },
                        new
                        {
                            MaterialID = 14,
                            DIV_CODE = "11",
                            STOCK_CODE = "N09APASF",
                            STOCK_NM = "PRICE ADJUSTMENT",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2013-03-04"
                        },
                        new
                        {
                            MaterialID = 15,
                            DIV_CODE = "11",
                            STOCK_CODE = "N09BGCSF",
                            STOCK_NM = "BACK GRINDING",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2013-02-28"
                        },
                        new
                        {
                            MaterialID = 16,
                            DIV_CODE = "11",
                            STOCK_CODE = "N09DDSSF",
                            STOCK_NM = "DESIGN SERVICE",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2013-03-04"
                        },
                        new
                        {
                            MaterialID = 17,
                            DIV_CODE = "11",
                            STOCK_CODE = "N09ENGSF",
                            STOCK_NM = "ENGINEERRING",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2013-03-15"
                        },
                        new
                        {
                            MaterialID = 18,
                            DIV_CODE = "11",
                            STOCK_CODE = "N09HHCSF",
                            STOCK_NM = "HOLD",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2013-03-05"
                        },
                        new
                        {
                            MaterialID = 19,
                            DIV_CODE = "11",
                            STOCK_CODE = "N09HOTSF",
                            STOCK_NM = "HOT",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2013-03-04"
                        },
                        new
                        {
                            MaterialID = 20,
                            DIV_CODE = "11",
                            STOCK_CODE = "N09LLCSF",
                            STOCK_NM = "PROTOTYPE LOT",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2013-03-05"
                        },
                        new
                        {
                            MaterialID = 21,
                            DIV_CODE = "11",
                            STOCK_CODE = "N09LMFSF",
                            STOCK_NM = "MPW SHUTTLE",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2013-03-04"
                        },
                        new
                        {
                            MaterialID = 22,
                            DIV_CODE = "11",
                            STOCK_CODE = "N09MHFSF",
                            STOCK_NM = "HANDLING",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2013-03-05"
                        },
                        new
                        {
                            MaterialID = 23,
                            DIV_CODE = "11",
                            STOCK_CODE = "N09MSKCS",
                            STOCK_NM = "MASK",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2019-06-18"
                        },
                        new
                        {
                            MaterialID = 24,
                            DIV_CODE = "11",
                            STOCK_CODE = "N09MSKSF",
                            STOCK_NM = "MASK",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2013-02-28"
                        },
                        new
                        {
                            MaterialID = 25,
                            DIV_CODE = "11",
                            STOCK_CODE = "N09PCBCS",
                            STOCK_NM = "PROBE CARD",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2017-08-02"
                        },
                        new
                        {
                            MaterialID = 26,
                            DIV_CODE = "11",
                            STOCK_CODE = "N09PRBCS",
                            STOCK_NM = "PROBE CARD",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2017-08-02"
                        },
                        new
                        {
                            MaterialID = 27,
                            DIV_CODE = "11",
                            STOCK_CODE = "N09PSCSF",
                            STOCK_NM = "SPLIT",
                            STOCK_RULE = "",
                            STOCK_UNIT = "AU",
                            W_DATE = "2013-03-04"
                        });
                });

            modelBuilder.Entity("WebVisit.Models.MealAccess", b =>
                {
                    b.Property<int>("MealAccessID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealAccessID"));

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MealGB1")
                        .HasColumnType("int");

                    b.Property<int?>("MealGB2")
                        .HasColumnType("int");

                    b.Property<int?>("MealGB3")
                        .HasColumnType("int");

                    b.Property<int?>("MealGB4")
                        .HasColumnType("int");

                    b.Property<int?>("MealGB5")
                        .HasColumnType("int");

                    b.Property<int?>("MealGB6")
                        .HasColumnType("int");

                    b.Property<string>("Sabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MealAccessID");

                    b.ToTable("MealAccess");
                });

            modelBuilder.Entity("WebVisit.Models.MealLog", b =>
                {
                    b.Property<int>("MealLogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealLogID"));

                    b.Property<string>("Comment")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("EqMasterID")
                        .HasColumnType("int");

                    b.Property<string>("GradeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsManual")
                        .HasColumnType("int");

                    b.Property<int>("IsVisitor")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MealGB")
                        .HasColumnType("int");

                    b.Property<DateTime>("MealYMD")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Sabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StateName")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("UpdateIP")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateSabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VisitantCompany")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VisitantGrade")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VisitantName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MealLogID");

                    b.ToTable("MealLog");
                });

            modelBuilder.Entity("WebVisit.Models.MealPrice", b =>
                {
                    b.Property<int>("MealPriceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealPriceID"));

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValue("N");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateIP")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateSabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MealPriceID");

                    b.ToTable("MealPrice");

                    b.HasData(
                        new
                        {
                            MealPriceID = 1,
                            Location = "2000",
                            Price = 3500
                        },
                        new
                        {
                            MealPriceID = 2,
                            Location = "3000",
                            Price = 3500
                        },
                        new
                        {
                            MealPriceID = 3,
                            Location = "6000",
                            Price = 4000
                        });
                });

            modelBuilder.Entity("WebVisit.Models.MealSchedule", b =>
                {
                    b.Property<int>("MealScheduleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealScheduleID"));

                    b.Property<string>("EndTime")
                        .IsRequired()
                        .HasColumnType("char(4)");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValue("N");

                    b.Property<int>("MealGB")
                        .HasColumnType("int");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasColumnType("char(4)");

                    b.Property<int>("Term")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateIP")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateSabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MealScheduleID");

                    b.ToTable("MealSchedule");

                    b.HasData(
                        new
                        {
                            MealScheduleID = 1,
                            EndTime = "0900",
                            MealGB = 1,
                            StartTime = "0530",
                            Term = 0,
                            UpdateIP = ""
                        },
                        new
                        {
                            MealScheduleID = 2,
                            EndTime = "1400",
                            MealGB = 2,
                            StartTime = "1130",
                            Term = 0,
                            UpdateIP = ""
                        },
                        new
                        {
                            MealScheduleID = 3,
                            EndTime = "1900",
                            MealGB = 3,
                            StartTime = "1630",
                            Term = 0,
                            UpdateIP = ""
                        },
                        new
                        {
                            MealScheduleID = 4,
                            EndTime = "2330",
                            MealGB = 4,
                            StartTime = "2130",
                            Term = 0,
                            UpdateIP = ""
                        },
                        new
                        {
                            MealScheduleID = 5,
                            EndTime = "0900",
                            MealGB = 1,
                            StartTime = "0530",
                            Term = 1,
                            UpdateIP = ""
                        },
                        new
                        {
                            MealScheduleID = 6,
                            EndTime = "1400",
                            MealGB = 2,
                            StartTime = "1130",
                            Term = 1,
                            UpdateIP = ""
                        },
                        new
                        {
                            MealScheduleID = 7,
                            EndTime = "1900",
                            MealGB = 3,
                            StartTime = "1630",
                            Term = 1,
                            UpdateIP = ""
                        },
                        new
                        {
                            MealScheduleID = 8,
                            EndTime = "2330",
                            MealGB = 4,
                            StartTime = "2130",
                            Term = 1,
                            UpdateIP = ""
                        });
                });

            modelBuilder.Entity("WebVisit.Models.MealTerm", b =>
                {
                    b.Property<int>("MealTermID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealTermID"));

                    b.Property<string>("EndDate")
                        .IsRequired()
                        .HasColumnType("varchar(4)");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValue("N");

                    b.Property<string>("StartDate")
                        .IsRequired()
                        .HasColumnType("varchar(4)");

                    b.Property<int>("Term")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateIP")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateSabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MealTermID");

                    b.ToTable("MealTerm");

                    b.HasData(
                        new
                        {
                            MealTermID = 1,
                            EndDate = "0831",
                            StartDate = "0401",
                            Term = 0,
                            UpdateIP = ""
                        },
                        new
                        {
                            MealTermID = 2,
                            EndDate = "0331",
                            StartDate = "0901",
                            Term = 1,
                            UpdateIP = ""
                        });
                });

            modelBuilder.Entity("WebVisit.Models.Menu", b =>
                {
                    b.Property<int>("MenuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuID"));

                    b.Property<int>("Depth")
                        .HasColumnType("int");

                    b.Property<int>("GroupNo")
                        .HasColumnType("int");

                    b.Property<string>("IconImg")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValue("N");

                    b.Property<string>("IsDisplay")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasDefaultValue("Y");

                    b.Property<string>("MenuNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MenuNameKor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MenuID");

                    b.ToTable("Menu");

                    b.HasData(
                        new
                        {
                            MenuID = 1,
                            Depth = 0,
                            GroupNo = 1,
                            IconImg = "/images/ico/ico-gnb-list01.svg",
                            InsertSabun = "1",
                            MenuNameEng = "Person Info",
                            MenuNameKor = "임직원 정보관리",
                            OrderNo = 1,
                            URL = ""
                        },
                        new
                        {
                            MenuID = 2,
                            Depth = 1,
                            GroupNo = 1,
                            InsertSabun = "1",
                            MenuNameEng = "Person Info",
                            MenuNameKor = "임직원 관리",
                            OrderNo = 2,
                            URL = "/person/list"
                        },
                        new
                        {
                            MenuID = 3,
                            Depth = 1,
                            GroupNo = 1,
                            InsertSabun = "1",
                            MenuNameEng = "Card",
                            MenuNameKor = "출입증 관리",
                            OrderNo = 5,
                            URL = "/card/list"
                        },
                        new
                        {
                            MenuID = 4,
                            Depth = 1,
                            GroupNo = 1,
                            InsertSabun = "1",
                            MenuNameEng = "Card Car",
                            MenuNameKor = "차량 관리",
                            OrderNo = 7,
                            URL = "/card/carlist"
                        },
                        new
                        {
                            MenuID = 5,
                            Depth = 0,
                            GroupNo = 5,
                            IconImg = "/images/ico/ico-gnb-list02.svg",
                            InsertSabun = "1",
                            MenuNameEng = "Company",
                            MenuNameKor = "업체정보관리",
                            OrderNo = 1,
                            URL = ""
                        },
                        new
                        {
                            MenuID = 6,
                            Depth = 1,
                            GroupNo = 5,
                            InsertSabun = "1",
                            MenuNameEng = "Company",
                            MenuNameKor = "업체정보관리",
                            OrderNo = 2,
                            URL = "/company/list"
                        },
                        new
                        {
                            MenuID = 7,
                            Depth = 0,
                            GroupNo = 7,
                            IconImg = "/images/ico/ico-gnb-list03.svg",
                            InsertSabun = "1",
                            MenuNameEng = "Visit",
                            MenuNameKor = "방문객관리",
                            OrderNo = 1,
                            URL = ""
                        },
                        new
                        {
                            MenuID = 8,
                            Depth = 1,
                            GroupNo = 7,
                            InsertSabun = "1",
                            MenuNameEng = "Visit",
                            MenuNameKor = "방문객 관리",
                            OrderNo = 2,
                            URL = "/visit/list"
                        },
                        new
                        {
                            MenuID = 9,
                            Depth = 1,
                            GroupNo = 7,
                            InsertSabun = "1",
                            MenuNameEng = "CarryItem",
                            MenuNameKor = "휴대물품 관리",
                            OrderNo = 5,
                            URL = "/carryitem/list"
                        },
                        new
                        {
                            MenuID = 10,
                            Depth = 1,
                            GroupNo = 7,
                            InsertSabun = "1",
                            MenuNameEng = "Visit Manual",
                            MenuNameKor = "방문객수기입력",
                            OrderNo = 8,
                            URL = "/visit/manuallist"
                        },
                        new
                        {
                            MenuID = 11,
                            Depth = 0,
                            GroupNo = 11,
                            IconImg = "/images/ico/ico-gnb-list04.svg",
                            InsertSabun = "1",
                            MenuNameEng = "Card Temp",
                            MenuNameKor = "임시증 관리",
                            OrderNo = 1,
                            URL = ""
                        },
                        new
                        {
                            MenuID = 12,
                            Depth = 1,
                            GroupNo = 11,
                            InsertSabun = "1",
                            MenuNameEng = "Card Temp",
                            MenuNameKor = "임시증 관리",
                            OrderNo = 2,
                            URL = "/card/templist"
                        },
                        new
                        {
                            MenuID = 13,
                            Depth = 0,
                            GroupNo = 13,
                            IconImg = "/images/ico/ico-gnb-list05.svg",
                            InsertSabun = "1",
                            MenuNameEng = "ExportImport",
                            MenuNameKor = "반출입 관리",
                            OrderNo = 1,
                            URL = ""
                        },
                        new
                        {
                            MenuID = 14,
                            Depth = 1,
                            GroupNo = 13,
                            InsertSabun = "1",
                            MenuNameEng = "ExportImport",
                            MenuNameKor = "반출입관리",
                            OrderNo = 2,
                            URL = "/exportimport/list"
                        },
                        new
                        {
                            MenuID = 15,
                            Depth = 1,
                            GroupNo = 13,
                            InsertSabun = "1",
                            MenuNameEng = "ExportImport Notebook",
                            MenuNameKor = "노트북자가결재",
                            OrderNo = 5,
                            URL = "/exportimport/selfapproval"
                        },
                        new
                        {
                            MenuID = 16,
                            Depth = 0,
                            GroupNo = 16,
                            IconImg = "/images/ico/ico-gnb-list06.svg",
                            InsertSabun = "1",
                            MenuNameEng = "Work / Safety",
                            MenuNameKor = "공사/안전 관리",
                            OrderNo = 1,
                            URL = ""
                        },
                        new
                        {
                            MenuID = 17,
                            Depth = 1,
                            GroupNo = 16,
                            InsertSabun = "1",
                            MenuNameEng = "Work",
                            MenuNameKor = "공사등록현황",
                            OrderNo = 2,
                            URL = "/work/list"
                        },
                        new
                        {
                            MenuID = 18,
                            Depth = 1,
                            GroupNo = 16,
                            InsertSabun = "1",
                            MenuNameEng = "Work Visit",
                            MenuNameKor = "공사신청현황",
                            OrderNo = 5,
                            URL = "/work/visitlist"
                        },
                        new
                        {
                            MenuID = 19,
                            Depth = 1,
                            GroupNo = 16,
                            InsertSabun = "1",
                            MenuNameEng = "Safety Edu",
                            MenuNameKor = "안전교육현황",
                            OrderNo = 8,
                            URL = "/work/safetyedulist"
                        },
                        new
                        {
                            MenuID = 20,
                            Depth = 1,
                            GroupNo = 16,
                            InsertSabun = "1",
                            MenuNameEng = "I/R",
                            MenuNameKor = "I/R발행",
                            OrderNo = 11,
                            URL = "/work/safetyviolationlist"
                        },
                        new
                        {
                            MenuID = 21,
                            Depth = 1,
                            GroupNo = 16,
                            InsertSabun = "1",
                            MenuNameEng = "Statistics",
                            MenuNameKor = "통계관리",
                            OrderNo = 14,
                            URL = "/work/statisticslist"
                        },
                        new
                        {
                            MenuID = 22,
                            Depth = 1,
                            GroupNo = 16,
                            InsertSabun = "1",
                            MenuNameEng = "Safety Violation",
                            MenuNameKor = "안전위규관리",
                            OrderNo = 15,
                            URL = "/work/safetyviolationreasonlist"
                        },
                        new
                        {
                            MenuID = 23,
                            Depth = 0,
                            GroupNo = 23,
                            IconImg = "/images/ico/ico-gnb-list07.svg",
                            InsertSabun = "1",
                            MenuNameEng = "Meal",
                            MenuNameKor = "식수집계관리",
                            OrderNo = 1,
                            URL = ""
                        },
                        new
                        {
                            MenuID = 24,
                            Depth = 1,
                            GroupNo = 23,
                            InsertSabun = "1",
                            MenuNameEng = "Meal",
                            MenuNameKor = "식수현황조회",
                            OrderNo = 2,
                            URL = "/meal/list"
                        },
                        new
                        {
                            MenuID = 25,
                            Depth = 1,
                            GroupNo = 23,
                            InsertSabun = "1",
                            MenuNameEng = "Meal Invalid",
                            MenuNameKor = "이상식수조회",
                            OrderNo = 4,
                            URL = "/meal/invalidlist"
                        },
                        new
                        {
                            MenuID = 26,
                            Depth = 1,
                            GroupNo = 23,
                            InsertSabun = "1",
                            MenuNameEng = "Meal Permission",
                            MenuNameKor = "식수권한관리",
                            OrderNo = 5,
                            URL = "/meal/permissionlist"
                        },
                        new
                        {
                            MenuID = 27,
                            Depth = 1,
                            GroupNo = 23,
                            InsertSabun = "1",
                            MenuNameEng = "Meal Info",
                            MenuNameKor = "식수정보관리",
                            OrderNo = 6,
                            URL = "/meal/infolist"
                        },
                        new
                        {
                            MenuID = 28,
                            Depth = 1,
                            GroupNo = 23,
                            InsertSabun = "1",
                            MenuNameEng = "Meal Manual",
                            MenuNameKor = "식수수기등록",
                            OrderNo = 7,
                            URL = "/meal/manuallist"
                        },
                        new
                        {
                            MenuID = 29,
                            Depth = 0,
                            GroupNo = 29,
                            IconImg = "/images/ico/ico-gnb-list08.svg",
                            InsertSabun = "1",
                            MenuNameEng = "MyInfo",
                            MenuNameKor = "내정보관리",
                            OrderNo = 1,
                            URL = ""
                        },
                        new
                        {
                            MenuID = 30,
                            Depth = 1,
                            GroupNo = 29,
                            InsertSabun = "1",
                            MenuNameEng = "MyInfo",
                            MenuNameKor = "내정보관리",
                            OrderNo = 2,
                            URL = "/person/myinfo"
                        },
                        new
                        {
                            MenuID = 31,
                            Depth = 0,
                            GroupNo = 31,
                            IconImg = "/images/ico/ico-gnb-list09.svg",
                            InsertSabun = "1",
                            MenuNameEng = "Notice",
                            MenuNameKor = "공지사항관리",
                            OrderNo = 1,
                            URL = ""
                        },
                        new
                        {
                            MenuID = 32,
                            Depth = 1,
                            GroupNo = 31,
                            InsertSabun = "1",
                            MenuNameEng = "Notice",
                            MenuNameKor = "공지사항관리",
                            OrderNo = 2,
                            URL = "/notice/list"
                        },
                        new
                        {
                            MenuID = 33,
                            Depth = 0,
                            GroupNo = 33,
                            IconImg = "/images/ico/ico-gnb-list10.svg",
                            InsertSabun = "1",
                            MenuNameEng = "System Management",
                            MenuNameKor = "시스템관리",
                            OrderNo = 1,
                            URL = ""
                        },
                        new
                        {
                            MenuID = 34,
                            Depth = 1,
                            GroupNo = 33,
                            InsertSabun = "1",
                            MenuNameEng = "Menu",
                            MenuNameKor = "메뉴관리",
                            OrderNo = 2,
                            URL = "/sys/menulist"
                        },
                        new
                        {
                            MenuID = 35,
                            Depth = 1,
                            GroupNo = 33,
                            InsertSabun = "1",
                            MenuNameEng = "Level",
                            MenuNameKor = "레벨관리",
                            OrderNo = 3,
                            URL = "/sys/levellist"
                        },
                        new
                        {
                            MenuID = 36,
                            Depth = 1,
                            GroupNo = 33,
                            InsertSabun = "1",
                            MenuNameEng = "Approval",
                            MenuNameKor = "결재경로관리",
                            OrderNo = 4,
                            URL = "/sys/approval"
                        },
                        new
                        {
                            MenuID = 37,
                            Depth = 1,
                            GroupNo = 33,
                            InsertSabun = "1",
                            MenuNameEng = "CommonCode",
                            MenuNameKor = "공통코드관리",
                            OrderNo = 5,
                            URL = "/sys/commoncode"
                        },
                        new
                        {
                            MenuID = 38,
                            Depth = 1,
                            GroupNo = 33,
                            InsertSabun = "1",
                            MenuNameEng = "Equipment",
                            MenuNameKor = "장비관리",
                            OrderNo = 6,
                            URL = ""
                        },
                        new
                        {
                            MenuID = 39,
                            Depth = 1,
                            GroupNo = 33,
                            InsertSabun = "1",
                            MenuNameEng = "Holiday",
                            MenuNameKor = "공휴일등록관리",
                            OrderNo = 7,
                            URL = "/sys/holidaylist"
                        },
                        new
                        {
                            MenuID = 40,
                            Depth = 0,
                            GroupNo = 40,
                            IconImg = "/images/ico/ico-gnb-list11.svg",
                            InsertSabun = "1",
                            MenuNameEng = "Access Record",
                            MenuNameKor = "출입기록관리",
                            OrderNo = 1,
                            URL = ""
                        },
                        new
                        {
                            MenuID = 41,
                            Depth = 1,
                            GroupNo = 40,
                            InsertSabun = "1",
                            MenuNameEng = "Access Record Person",
                            MenuNameKor = "인원출입조회",
                            OrderNo = 2,
                            URL = "/accessrecord/personlist"
                        },
                        new
                        {
                            MenuID = 42,
                            Depth = 1,
                            GroupNo = 40,
                            InsertSabun = "1",
                            MenuNameEng = "Access Record Car",
                            MenuNameKor = "차량출입조회",
                            OrderNo = 3,
                            URL = "/accessrecord/carlist"
                        },
                        new
                        {
                            MenuID = 43,
                            Depth = 1,
                            GroupNo = 40,
                            InsertSabun = "1",
                            MenuNameEng = "Access Record",
                            MenuNameKor = "인원출입현황",
                            OrderNo = 4,
                            URL = "/accessrecord/statisticslist"
                        },
                        new
                        {
                            MenuID = 44,
                            Depth = 0,
                            GroupNo = 44,
                            IconImg = "/images/ico/ico-gnb-list12.svg",
                            InsertSabun = "1",
                            MenuNameEng = "Card Apply",
                            MenuNameKor = "인원출입관리",
                            OrderNo = 1,
                            URL = ""
                        },
                        new
                        {
                            MenuID = 45,
                            Depth = 1,
                            GroupNo = 44,
                            InsertSabun = "1",
                            MenuNameEng = "Card Apply Person",
                            MenuNameKor = "인원출입증현황 ",
                            OrderNo = 2,
                            URL = "/card/applylist"
                        },
                        new
                        {
                            MenuID = 46,
                            Depth = 1,
                            GroupNo = 44,
                            InsertSabun = "1",
                            MenuNameEng = "Card Apply Car",
                            MenuNameKor = "차량출입증현황",
                            OrderNo = 5,
                            URL = "/card/carapplylist"
                        },
                        new
                        {
                            MenuID = 47,
                            Depth = 1,
                            GroupNo = 44,
                            InsertSabun = "1",
                            MenuNameEng = "BlackList",
                            MenuNameKor = "블랙리스트관리",
                            OrderNo = 8,
                            URL = "/person/blacklist"
                        });
                });

            modelBuilder.Entity("WebVisit.Models.MenuHistory", b =>
                {
                    b.Property<int>("MenuHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuHistoryID"));

                    b.Property<int>("Depth")
                        .HasColumnType("int");

                    b.Property<int>("GroupNo")
                        .HasColumnType("int");

                    b.Property<string>("IconImg")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsDisplay")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("MenuID")
                        .HasColumnType("int");

                    b.Property<string>("MenuNameEng")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MenuNameKor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MenuHistoryID");

                    b.ToTable("MenuHistory");
                });

            modelBuilder.Entity("WebVisit.Models.MenuLevel", b =>
                {
                    b.Property<int>("MenuLevelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuLevelID"));

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsAccess")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValue("Y");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValue("N");

                    b.Property<string>("IsDisplay")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValue("N");

                    b.Property<int>("LevelID")
                        .HasColumnType("int");

                    b.Property<int>("MenuID")
                        .HasColumnType("int");

                    b.Property<string>("MenuNameEng")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MenuNameKor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MenuLevelID");

                    b.ToTable("MenuLevel");

                    b.HasData(
                        new
                        {
                            MenuLevelID = 1,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 2,
                            MenuNameEng = "Person Info",
                            MenuNameKor = "임직원 관리"
                        },
                        new
                        {
                            MenuLevelID = 2,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 3,
                            MenuNameEng = "Card",
                            MenuNameKor = "출입증 관리"
                        },
                        new
                        {
                            MenuLevelID = 3,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 4,
                            MenuNameEng = "Card Car ",
                            MenuNameKor = "차량 관리"
                        },
                        new
                        {
                            MenuLevelID = 4,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 6,
                            MenuNameEng = "Company",
                            MenuNameKor = "업체정보관리"
                        },
                        new
                        {
                            MenuLevelID = 5,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 8,
                            MenuNameEng = "Visit ",
                            MenuNameKor = "방문객 관리"
                        },
                        new
                        {
                            MenuLevelID = 6,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 9,
                            MenuNameEng = "CarryItem ",
                            MenuNameKor = "휴대물품 관리"
                        },
                        new
                        {
                            MenuLevelID = 7,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 10,
                            MenuNameEng = "Visit Manual",
                            MenuNameKor = "방문객수기입력"
                        },
                        new
                        {
                            MenuLevelID = 8,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 12,
                            MenuNameEng = "Card Temp ",
                            MenuNameKor = "임시증 관리"
                        },
                        new
                        {
                            MenuLevelID = 9,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 14,
                            MenuNameEng = "ExportImport ",
                            MenuNameKor = "반출입관리"
                        },
                        new
                        {
                            MenuLevelID = 10,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 15,
                            MenuNameEng = "ExportImport Notebook ",
                            MenuNameKor = "노트북자가결재"
                        },
                        new
                        {
                            MenuLevelID = 11,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 17,
                            MenuNameEng = "Work",
                            MenuNameKor = "공사등록현황"
                        },
                        new
                        {
                            MenuLevelID = 12,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 18,
                            MenuNameEng = "Work Visit ",
                            MenuNameKor = "공사신청현황"
                        },
                        new
                        {
                            MenuLevelID = 13,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 19,
                            MenuNameEng = "Safety Edu",
                            MenuNameKor = "안전교육현황"
                        },
                        new
                        {
                            MenuLevelID = 14,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 20,
                            MenuNameEng = "I/R ",
                            MenuNameKor = "I/R발행"
                        },
                        new
                        {
                            MenuLevelID = 15,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 21,
                            MenuNameEng = "Statistics ",
                            MenuNameKor = "통계관리"
                        },
                        new
                        {
                            MenuLevelID = 16,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 22,
                            MenuNameEng = "Safety Violation ",
                            MenuNameKor = "안전위규관리"
                        },
                        new
                        {
                            MenuLevelID = 17,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 24,
                            MenuNameEng = "Meal",
                            MenuNameKor = "식수현황조회"
                        },
                        new
                        {
                            MenuLevelID = 18,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 25,
                            MenuNameEng = "Meal Invalid ",
                            MenuNameKor = "이상식수조회"
                        },
                        new
                        {
                            MenuLevelID = 19,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 26,
                            MenuNameEng = "Meal Permission ",
                            MenuNameKor = "식수권한관리"
                        },
                        new
                        {
                            MenuLevelID = 20,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 27,
                            MenuNameEng = "Meal Info ",
                            MenuNameKor = "식수정보관리"
                        },
                        new
                        {
                            MenuLevelID = 21,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 28,
                            MenuNameEng = "Meal Manual",
                            MenuNameKor = "식수수기등록"
                        },
                        new
                        {
                            MenuLevelID = 22,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 30,
                            MenuNameEng = "MyInfo ",
                            MenuNameKor = "내정보관리"
                        },
                        new
                        {
                            MenuLevelID = 23,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 32,
                            MenuNameEng = "Notice ",
                            MenuNameKor = "공지사항"
                        },
                        new
                        {
                            MenuLevelID = 24,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 34,
                            MenuNameEng = "Menu",
                            MenuNameKor = "메뉴관리"
                        },
                        new
                        {
                            MenuLevelID = 25,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 35,
                            MenuNameEng = "Level ",
                            MenuNameKor = "레벨관리"
                        },
                        new
                        {
                            MenuLevelID = 26,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 36,
                            MenuNameEng = "Approval",
                            MenuNameKor = "결재경로관리"
                        },
                        new
                        {
                            MenuLevelID = 27,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 37,
                            MenuNameEng = "CommonCode ",
                            MenuNameKor = "공통코드관리"
                        },
                        new
                        {
                            MenuLevelID = 28,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 38,
                            MenuNameEng = " ",
                            MenuNameKor = "장비관리"
                        },
                        new
                        {
                            MenuLevelID = 29,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 39,
                            MenuNameEng = "Holiday ",
                            MenuNameKor = "공휴일등록관리"
                        },
                        new
                        {
                            MenuLevelID = 30,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 41,
                            MenuNameEng = "Access Record Person ",
                            MenuNameKor = "인원출입조회"
                        },
                        new
                        {
                            MenuLevelID = 31,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 42,
                            MenuNameEng = "Access Record Car ",
                            MenuNameKor = "차량출입조회"
                        },
                        new
                        {
                            MenuLevelID = 32,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 43,
                            MenuNameEng = "Access Record",
                            MenuNameKor = "인원출입현황"
                        },
                        new
                        {
                            MenuLevelID = 33,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 45,
                            MenuNameEng = "Card Apply Person ",
                            MenuNameKor = "인원출입증신청현황"
                        },
                        new
                        {
                            MenuLevelID = 34,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 46,
                            MenuNameEng = "Card Apply Car ",
                            MenuNameKor = "차량출입증승인현황"
                        },
                        new
                        {
                            MenuLevelID = 35,
                            InsertSabun = "1",
                            LevelID = 1,
                            MenuID = 47,
                            MenuNameEng = "BlackList ",
                            MenuNameKor = "블랙리스트관리"
                        });
                });

            modelBuilder.Entity("WebVisit.Models.MenuLevelHistory", b =>
                {
                    b.Property<int>("MenuLevelHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuLevelHistoryID"));

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsAccess")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("IsDisplay")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<int>("LevelID")
                        .HasColumnType("int");

                    b.Property<int>("MenuID")
                        .HasColumnType("int");

                    b.Property<int>("MenuLevelID")
                        .HasColumnType("int");

                    b.Property<string>("MenuNameEng")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MenuNameKor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MenuLevelHistoryID");

                    b.ToTable("MenuLevelHistory");
                });

            modelBuilder.Entity("WebVisit.Models.NotebookSelfApproval", b =>
                {
                    b.Property<int>("NotebookSelfApprovalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotebookSelfApprovalID"));

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("GradeID")
                        .HasColumnType("int");

                    b.Property<string>("GradeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("NotebookSelfApprovalID");

                    b.ToTable("NotebookSelfApproval");
                });

            modelBuilder.Entity("WebVisit.Models.NotebookSelfApprovalHistory", b =>
                {
                    b.Property<int>("NotebookSelfApprovalHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotebookSelfApprovalHistoryID"));

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("GradeID")
                        .HasColumnType("int");

                    b.Property<string>("GradeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NotebookSelfApprovalID")
                        .HasColumnType("int");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("NotebookSelfApprovalHistoryID");

                    b.ToTable("NotebookSelfApprovalHistory");
                });

            modelBuilder.Entity("WebVisit.Models.Notice", b =>
                {
                    b.Property<int>("NoticeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NoticeID"));

                    b.Property<string>("Contents")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileData1")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("FileData2")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("FileDataHash1")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("FileDataHash2")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("IsPublish")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("NoticeID");

                    b.ToTable("Notice");
                });

            modelBuilder.Entity("WebVisit.Models.PasswordHistory", b =>
                {
                    b.Property<int>("PasswordHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PasswordHistoryID"));

                    b.Property<int>("ChangeType")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PasswordHistoryID");

                    b.ToTable("PasswordHistory");
                });

            modelBuilder.Entity("WebVisit.Models.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonID"));

                    b.Property<string>("BirthDate")
                        .HasColumnType("char(10)");

                    b.Property<int?>("CarAllowCnt")
                        .HasColumnType("int");

                    b.Property<int?>("CarRegCnt")
                        .HasColumnType("int");

                    b.Property<int?>("CardCreateCnt")
                        .HasColumnType("int");

                    b.Property<int?>("CardID")
                        .HasColumnType("int");

                    b.Property<int?>("CardIssueStatus")
                        .HasColumnType("int");

                    b.Property<string>("CardNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CleanEduLastDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Gender")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("GradeID")
                        .HasColumnType("int");

                    b.Property<string>("GradeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HomeAddr")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HomeDetailAddr")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("HomeZipcode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ImageData")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("ImageDataHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImmEndDate")
                        .HasColumnType("char(10)");

                    b.Property<string>("ImmStartDate")
                        .HasColumnType("char(10)");

                    b.Property<int?>("ImmStatusCodeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsAllowSMS")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValue("N");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)")
                        .HasDefaultValue("N");

                    b.Property<int?>("IsForeigner")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("IsRecTempCard")
                        .HasColumnType("char(1)");

                    b.Property<int>("LevelCodeID")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PWUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("PersonStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("PersonTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Sabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("SafetyEduLastDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("TempCardRecDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TermsPrivarcyFileData")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("TermsPrivarcyFileDataHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateIP")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ValidDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VisitLastDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VisitorEduLastDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WorkTypeCodeID")
                        .HasColumnType("int");

                    b.HasKey("PersonID");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            PersonID = 1,
                            CompanyID = 0,
                            InsertSabun = "1",
                            LevelCodeID = 1,
                            Name = "마스터관리자",
                            OrgNameEng = "master",
                            OrgNameKor = "마스터",
                            Password = "jZae727K08KaOmKSgOaGzww/XVqGr/PKEgIMkjrcbJI=",
                            Sabun = "master"
                        });
                });

            modelBuilder.Entity("WebVisit.Models.PorteLog", b =>
                {
                    b.Property<int>("PorteLogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PorteLogID"));

                    b.Property<string>("BusinessID")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("IsSuccess")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("ResponseData")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.HasKey("PorteLogID");

                    b.ToTable("PorteLog");
                });

            modelBuilder.Entity("WebVisit.Models.SMS", b =>
                {
                    b.Property<int>("SMSID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SMSID"));

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SMSType")
                        .HasColumnType("int");

                    b.Property<string>("Sabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VisitPersonID")
                        .HasColumnType("int");

                    b.Property<int>("VisitorType")
                        .HasColumnType("int");

                    b.HasKey("SMSID");

                    b.ToTable("SMS");
                });

            modelBuilder.Entity("WebVisit.Models.SafetyEdu", b =>
                {
                    b.Property<int>("SafetyEduID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SafetyEduID"));

                    b.Property<int>("EduApplyStatus")
                        .HasColumnType("int");

                    b.Property<string>("EduDate")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WorkApplyID")
                        .HasColumnType("int");

                    b.HasKey("SafetyEduID");

                    b.ToTable("SafetyEdu");
                });

            modelBuilder.Entity("WebVisit.Models.SafetyEduApply", b =>
                {
                    b.Property<int>("SafetyEduApplyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SafetyEduApplyID"));

                    b.Property<int>("EduCompleteStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EduDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SafetyEduID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SafetyEduApplyID");

                    b.ToTable("SafetyEduApply");
                });

            modelBuilder.Entity("WebVisit.Models.SafetyEduApplyHistory", b =>
                {
                    b.Property<int>("SafetyEduApplyHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SafetyEduApplyHistoryID"));

                    b.Property<int>("EduCompleteStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("EduDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SafetyEduApplyID")
                        .HasColumnType("int");

                    b.Property<int>("SafetyEduID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ValidDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SafetyEduApplyHistoryID");

                    b.ToTable("SafetyEduApplyHistory");
                });

            modelBuilder.Entity("WebVisit.Models.SafetyEduHistory", b =>
                {
                    b.Property<int>("SafetyEduHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SafetyEduHistoryID"));

                    b.Property<int>("EduApplyStatus")
                        .HasColumnType("int");

                    b.Property<string>("EduDate")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SafetyEduID")
                        .HasColumnType("int");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("WorkApplyID")
                        .HasColumnType("int");

                    b.HasKey("SafetyEduHistoryID");

                    b.ToTable("SafetyEduHistory");
                });

            modelBuilder.Entity("WebVisit.Models.SafetyViolation", b =>
                {
                    b.Property<int>("SafetyViolationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SafetyViolationID"));

                    b.Property<string>("ContactName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DetailReason")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("IsWorkOrder")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SafetyViolationReasonID")
                        .HasColumnType("int");

                    b.Property<int>("SafetyViolationStatus")
                        .HasColumnType("int");

                    b.Property<string>("StatementFileData")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("StatementFileDataHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ViolationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ViolationLocation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WorkOrderNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SafetyViolationID");

                    b.ToTable("SafetyViolation");
                });

            modelBuilder.Entity("WebVisit.Models.SafetyViolationHistory", b =>
                {
                    b.Property<int>("SafetyViolationHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SafetyViolationHistoryID"));

                    b.Property<string>("ContactName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DetailReason")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsWorkOrder")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SafetyViolationID")
                        .HasColumnType("int");

                    b.Property<int>("SafetyViolationReasonID")
                        .HasColumnType("int");

                    b.Property<int>("SafetyViolationStatus")
                        .HasColumnType("int");

                    b.Property<string>("StatementFileData")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("StatementFileDataHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ViolationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ViolationLocation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("WorkOrderNo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SafetyViolationHistoryID");

                    b.ToTable("SafetyViolationHistory");
                });

            modelBuilder.Entity("WebVisit.Models.SafetyViolationPerson", b =>
                {
                    b.Property<int>("SafetyViolationPersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SafetyViolationPersonID"));

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SafetyViolationID")
                        .HasColumnType("int");

                    b.Property<int>("SafetyViolationReasonID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ViolationTime")
                        .HasColumnType("int");

                    b.HasKey("SafetyViolationPersonID");

                    b.ToTable("SafetyViolationPerson");
                });

            modelBuilder.Entity("WebVisit.Models.SafetyViolationPersonHistory", b =>
                {
                    b.Property<int>("SafetyViolationPersonHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SafetyViolationPersonHistoryID"));

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SafetyViolationID")
                        .HasColumnType("int");

                    b.Property<int>("SafetyViolationPersonID")
                        .HasColumnType("int");

                    b.Property<int>("SafetyViolationReasonID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ViolationTime")
                        .HasColumnType("int");

                    b.HasKey("SafetyViolationPersonHistoryID");

                    b.ToTable("SafetyViolationPersonHistory");
                });

            modelBuilder.Entity("WebVisit.Models.SafetyViolationReason", b =>
                {
                    b.Property<int>("SafetyViolationReasonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SafetyViolationReasonID"));

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsActive")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("SafetyViolationReasonContents")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ViolationLevel")
                        .HasColumnType("int");

                    b.Property<int>("ViolationPenaltyPeoriod1")
                        .HasColumnType("int");

                    b.Property<int?>("ViolationPenaltyPeoriod2")
                        .HasColumnType("int");

                    b.Property<int?>("ViolationPenaltyPeoriod3")
                        .HasColumnType("int");

                    b.HasKey("SafetyViolationReasonID");

                    b.ToTable("SafetyViolationReason");
                });

            modelBuilder.Entity("WebVisit.Models.SafetyViolationReasonHistory", b =>
                {
                    b.Property<int>("SafetyViolationReasonHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SafetyViolationReasonHistoryID"));

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsActive")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("SafetyViolationReasonContents")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("SafetyViolationReasonID")
                        .HasColumnType("int");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ViolationLevel")
                        .HasColumnType("int");

                    b.Property<int>("ViolationPenaltyPeoriod1")
                        .HasColumnType("int");

                    b.Property<int?>("ViolationPenaltyPeoriod2")
                        .HasColumnType("int");

                    b.Property<int?>("ViolationPenaltyPeoriod3")
                        .HasColumnType("int");

                    b.HasKey("SafetyViolationReasonHistoryID");

                    b.ToTable("SafetyViolationReasonHistory");
                });

            modelBuilder.Entity("WebVisit.Models.TempCardIssueApply", b =>
                {
                    b.Property<int>("TempCardIssueApplyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TempCardIssueApplyID"));

                    b.Property<int?>("CardID")
                        .HasColumnType("int");

                    b.Property<string>("CardName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CardNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CardTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CardValidDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("GradeID")
                        .HasColumnType("int");

                    b.Property<string>("GradeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PersonTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("ReissueNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TempCardIssueStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TempCardIssueApplyID");

                    b.ToTable("TempCardIssueApply");
                });

            modelBuilder.Entity("WebVisit.Models.TempCardIssueApplyHistory", b =>
                {
                    b.Property<int>("TempCardIssueApplyHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TempCardIssueApplyHistoryID"));

                    b.Property<int?>("CardID")
                        .HasColumnType("int");

                    b.Property<string>("CardName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CardNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CardTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CardValidDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("GradeID")
                        .HasColumnType("int");

                    b.Property<string>("GradeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PersonTypeID")
                        .HasColumnType("int");

                    b.Property<int?>("ReissueNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TempCardIssueApplyID")
                        .HasColumnType("int");

                    b.Property<int>("TempCardIssueStatus")
                        .HasColumnType("int");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TempCardIssueApplyHistoryID");

                    b.ToTable("TempCardIssueApplyHistory");
                });

            modelBuilder.Entity("WebVisit.Models.VisitApply", b =>
                {
                    b.Property<int>("VisitApplyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitApplyID"));

                    b.Property<string>("ContactName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PlaceCodeID")
                        .HasColumnType("int");

                    b.Property<string>("Purpose")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("RegVisitorType")
                        .HasColumnType("int");

                    b.Property<int?>("SafetyEduID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VisitApplyStatus")
                        .HasColumnType("int");

                    b.Property<int>("VisitApplyType")
                        .HasColumnType("int");

                    b.Property<string>("VisitEndDate")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<int?>("VisitManualPurposeCodeID")
                        .HasColumnType("int");

                    b.Property<int?>("VisitPersonID")
                        .HasColumnType("int");

                    b.Property<int?>("VisitPurposeCodeID")
                        .HasColumnType("int");

                    b.Property<string>("VisitStartDate")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<int?>("WorkApplyID")
                        .HasColumnType("int");

                    b.Property<int?>("WorkVisitApplyID")
                        .HasColumnType("int");

                    b.HasKey("VisitApplyID");

                    b.ToTable("VisitApply");
                });

            modelBuilder.Entity("WebVisit.Models.VisitApplyHistory", b =>
                {
                    b.Property<int>("VisitApplyHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitApplyHistoryID"));

                    b.Property<string>("ContactName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PlaceCodeID")
                        .HasColumnType("int");

                    b.Property<string>("Purpose")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("RegVisitorType")
                        .HasColumnType("int");

                    b.Property<string>("RejectReason")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("SafetyEduID")
                        .HasColumnType("int");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VisitApplyID")
                        .HasColumnType("int");

                    b.Property<int>("VisitApplyStatus")
                        .HasColumnType("int");

                    b.Property<int>("VisitApplyType")
                        .HasColumnType("int");

                    b.Property<string>("VisitEndDate")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<int?>("VisitManualPurposeCodeID")
                        .HasColumnType("int");

                    b.Property<int?>("VisitPersonID")
                        .HasColumnType("int");

                    b.Property<int?>("VisitPurposeCodeID")
                        .HasColumnType("int");

                    b.Property<string>("VisitStartDate")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<int?>("WorkApplyID")
                        .HasColumnType("int");

                    b.Property<int?>("WorkVisitApplyID")
                        .HasColumnType("int");

                    b.HasKey("VisitApplyHistoryID");

                    b.ToTable("VisitApplyHistory");
                });

            modelBuilder.Entity("WebVisit.Models.VisitApplyPerson", b =>
                {
                    b.Property<int>("VisitApplyPersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitApplyPersonID"));

                    b.Property<string>("BirthDate")
                        .HasColumnType("char(10)");

                    b.Property<string>("CarNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CardID")
                        .HasColumnType("int");

                    b.Property<string>("CardNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CleanEduDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CleanEduScore")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CleanEntryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CleanExitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExitDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("InsertVisitPersonID")
                        .HasColumnType("int");

                    b.Property<int>("InsertVisitorType")
                        .HasColumnType("int");

                    b.Property<string>("IsCleanEdu")
                        .HasColumnType("char(1)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("IsSafetyEdu")
                        .HasColumnType("char(1)");

                    b.Property<string>("IsTermsPrivarcy")
                        .HasColumnType("char(1)");

                    b.Property<string>("IsTermsVehicle")
                        .HasColumnType("char(1)");

                    b.Property<string>("IsVIP")
                        .HasColumnType("char(1)");

                    b.Property<string>("IsVisitorEdu")
                        .HasColumnType("char(1)");

                    b.Property<string>("LPRResult")
                        .HasColumnType("char(1)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("SafetyEduDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SafetyEduID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VipTypeCodeID")
                        .HasColumnType("int");

                    b.Property<int>("VisitApplyID")
                        .HasColumnType("int");

                    b.Property<int>("VisitApplyStatus")
                        .HasColumnType("int");

                    b.Property<string>("VisitDate")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<int?>("VisitPersonID")
                        .HasColumnType("int");

                    b.Property<int>("VisitStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VisitorEduDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VisitorType")
                        .HasColumnType("int");

                    b.Property<int?>("WorkApplyID")
                        .HasColumnType("int");

                    b.Property<int?>("WorkVisitApplyID")
                        .HasColumnType("int");

                    b.HasKey("VisitApplyPersonID");

                    b.ToTable("VisitApplyPerson");
                });

            modelBuilder.Entity("WebVisit.Models.VisitApplyPersonHistory", b =>
                {
                    b.Property<int>("VisitApplyPersonHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitApplyPersonHistoryID"));

                    b.Property<string>("BirthDate")
                        .HasColumnType("char(10)");

                    b.Property<string>("CarNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CardID")
                        .HasColumnType("int");

                    b.Property<string>("CardNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CleanEduDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CleanEduScore")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CleanEntryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CleanExitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExitDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsCleanEdu")
                        .HasColumnType("char(1)");

                    b.Property<string>("IsSafetyEdu")
                        .HasColumnType("char(1)");

                    b.Property<string>("IsTermsPrivarcy")
                        .HasColumnType("char(1)");

                    b.Property<string>("IsTermsVehicle")
                        .HasColumnType("char(1)");

                    b.Property<string>("IsVIP")
                        .HasColumnType("char(1)");

                    b.Property<string>("IsVisitorEdu")
                        .HasColumnType("char(1)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("SafetyEduDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SafetyEduID")
                        .HasColumnType("int");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdateVisitPersonID")
                        .HasColumnType("int");

                    b.Property<int>("UpdateVisitorType")
                        .HasColumnType("int");

                    b.Property<int?>("VipTypeCodeID")
                        .HasColumnType("int");

                    b.Property<int>("VisitApplyID")
                        .HasColumnType("int");

                    b.Property<int>("VisitApplyPersonID")
                        .HasColumnType("int");

                    b.Property<int>("VisitApplyStatus")
                        .HasColumnType("int");

                    b.Property<string>("VisitDate")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<int?>("VisitPersonID")
                        .HasColumnType("int");

                    b.Property<int>("VisitStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VisitorEduDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VisitorType")
                        .HasColumnType("int");

                    b.Property<int?>("WorkApplyID")
                        .HasColumnType("int");

                    b.Property<int?>("WorkVisitApplyID")
                        .HasColumnType("int");

                    b.HasKey("VisitApplyPersonHistoryID");

                    b.ToTable("VisitApplyPersonHistory");
                });

            modelBuilder.Entity("WebVisit.Models.VisitPerson", b =>
                {
                    b.Property<int>("VisitPersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitPersonID"));

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<string>("CarNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CleanEduLastDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("GradeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RegVisitorType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SafetyEduLastDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VisitLastDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VisitorEduLastDate")
                        .HasColumnType("datetime2");

                    b.HasKey("VisitPersonID");

                    b.ToTable("VisitPerson");
                });

            modelBuilder.Entity("WebVisit.Models.WorkApply", b =>
                {
                    b.Property<int>("WorkApplyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkApplyID"));

                    b.Property<string>("ApprovalName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovalOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovalSabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalTel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("IsWorkReg")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkApplyNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("WorkApplyStatus")
                        .HasColumnType("int");

                    b.Property<string>("WorkContractFileData")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("WorkContractFileDataHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("WorkEndDate")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<string>("WorkMemo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("WorkName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("WorkStartDate")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.HasKey("WorkApplyID");

                    b.ToTable("WorkApply");
                });

            modelBuilder.Entity("WebVisit.Models.WorkApplyAttachFile", b =>
                {
                    b.Property<int>("WorkApplyAttachFileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkApplyAttachFileID"));

                    b.Property<string>("AttachFileData")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("AttachFileDataHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Title")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkApplyID")
                        .HasColumnType("int");

                    b.HasKey("WorkApplyAttachFileID");

                    b.ToTable("WorkApplyAttachFile");
                });

            modelBuilder.Entity("WebVisit.Models.WorkApplyHistory", b =>
                {
                    b.Property<int>("WorkApplyHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkApplyHistoryID"));

                    b.Property<string>("ApprovalName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovalOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApprovalSabun")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApprovalTel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsWorkReg")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RejectReason")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkApplyID")
                        .HasColumnType("int");

                    b.Property<string>("WorkApplyNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("WorkApplyStatus")
                        .HasColumnType("int");

                    b.Property<string>("WorkContractFileData")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<byte[]>("WorkContractFileDataHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("WorkEndDate")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<string>("WorkMemo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("WorkName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("WorkStartDate")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.HasKey("WorkApplyHistoryID");

                    b.ToTable("WorkApplyHistory");
                });

            modelBuilder.Entity("WebVisit.Models.WorkVisitApply", b =>
                {
                    b.Property<int>("WorkVisitApplyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkVisitApplyID"));

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsertName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsertOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsertSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkApplyID")
                        .HasColumnType("int");

                    b.Property<string>("WorkDate")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<int>("WorkVisitApplyStatus")
                        .HasColumnType("int");

                    b.HasKey("WorkVisitApplyID");

                    b.ToTable("WorkVisitApply");
                });

            modelBuilder.Entity("WebVisit.Models.WorkVisitApplyHistory", b =>
                {
                    b.Property<int>("WorkVisitApplyHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkVisitApplyHistoryID"));

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UpdateOrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateOrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UpdateSabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkApplyID")
                        .HasColumnType("int");

                    b.Property<string>("WorkDate")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<int>("WorkVisitApplyID")
                        .HasColumnType("int");

                    b.Property<int>("WorkVisitApplyStatus")
                        .HasColumnType("int");

                    b.HasKey("WorkVisitApplyHistoryID");

                    b.ToTable("WorkVisitApplyHistory");
                });

            modelBuilder.Entity("WebVisit.Models.WorkVisitPersonApply", b =>
                {
                    b.Property<int>("WorkVisitPersonApplyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkVisitPersonApplyID"));

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsDelete")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkVisitApplyID")
                        .HasColumnType("int");

                    b.Property<int>("WorkVisitApplyStatus")
                        .HasColumnType("int");

                    b.HasKey("WorkVisitPersonApplyID");

                    b.ToTable("WorkVisitPersonApply");
                });

            modelBuilder.Entity("WebVisit.Models.WorkVisitPersonApplyHistory", b =>
                {
                    b.Property<int>("WorkVisitPersonApplyHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkVisitPersonApplyHistoryID"));

                    b.Property<DateTime>("InsertUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgID")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrgNameEng")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OrgNameKor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sabun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkVisitApplyID")
                        .HasColumnType("int");

                    b.Property<int>("WorkVisitApplyStatus")
                        .HasColumnType("int");

                    b.Property<int>("WorkVisitPersonApplyID")
                        .HasColumnType("int");

                    b.HasKey("WorkVisitPersonApplyHistoryID");

                    b.ToTable("WorkVisitPersonApplyHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
